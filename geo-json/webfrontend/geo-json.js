var bind=function(e,t){return function(){return e.apply(t,arguments)}},extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,ResultMap=(e=>{function T(){return this.__getMarkerBySignature=bind(this.__getMarkerBySignature,this),T.__super__.constructor.apply(this,arguments)}return extend(T,e),T.BUCKET_MAX_OBJECTS=30,T.MAX_CONCURRENT_BUCKETS_REQUESTS=10,T.BUCKETS_PER_REQUEST=500,T.source="fylr-result-map",T.prototype.initOpts=function(){return T.__super__.initOpts.call(this),this.settings=this.getDefaultSettings()},T.prototype.init=function(){var t,o,n;return T.__super__.init.call(this),t=new CUI.Deferred,this.__pane=new CUI.Pane({class:"ez5-result-table-pane-v2",absolute:this._pane_absolute}),this.__loadingPromise=this.__getMapContainer(),this.__loadingPromise.done((o=this,function(e){return CUI.dom.append(o.__pane.center(),e),CUI.dom.replace(o.getResultContainer(),o.__pane),o.afterInit(),t.resolve()})),CUI.Events.listen({node:this.result_container,type:"toolbox",call:(n=this,function(e,t){return t.tools.push.apply(t.tools,n.getTools()),e.stopPropagation()})}),this.__fitNeeded=!0,t.promise()},T.prototype.afterInit=function(){var e;return"function"==typeof(e=this.getSearch()).disableMapManager?e.disableMapManager():void 0},T.prototype.addGeoBoundingBoxQueryElement=function(){var e=this.__getRequestMapBounds(),e=new QueryElementGeoBoundingBox({boundingBox:e});return this.getSearch().showInSearch(e)},T.prototype.getTools=function(){var t,e=[];return this.__map&&e.push(new ToolboxTool({name:"map.capture.bound",group:"map",run:(t=this,function(e){return t.addGeoBoundingBoxQueryElement()})})),e},T.prototype.getName=function(){return"map"},T.prototype.setSearch=function(e){return this._search=e,T.__super__.setSearch.call(this,this._search),this},T.prototype.unsetSearch=function(){var e;return"function"==typeof(e=this.getSearch()).enableMapManager&&e.enableMapManager(),T.__super__.unsetSearch.call(this),this},T.prototype.updateView=function(e){return T.__super__.updateView.call(this,e)},T.prototype.__getMapOpts=function(){var t,o,n,r,a;return{defaultSource:T.source,clickable:!1,zoomToFitAllMarkersOnInit:!0,onMoveEnd:T.debounce(this.__onMapMoveEnd.bind(this),250),renderPopup:function(e){return a.__renderPopup(e)},onRender:function(e,t){return r.__onRenderFeatures(e,t)},onClick:function(e,t){return n.__onMapClick(e,t)},onReady:function(e){return o.__onMapReady(e)},styleFunction:(t=o=n=r=a=this,function(e){return t.__styleFunction(e)})}},T.prototype.__styleFunction=function(e){},T.prototype.__onMapReady=function(e){return this.__map||(this.__map=e),this.__map.resize(!0)},T.prototype.__getMapContainer=function(){var t,o;return this.__map?CUI.resolvedPromise(this.__map):(t=new CUI.Deferred,GeoJsonMap.load(this.__getMapOpts()).done((o=this,function(e){return o.__map=e,t.resolve(o.__map)})).fail(function(){return t.reject()}),t)},T.prototype.__onMapClick=function(e,t){},T.prototype.showResult=function(e,t){var o,n,r,a,i,s,u,l,_,c,p,d,h,f,m,g,y,C,w,v,b,I,S;if(e.__map_executed||e.offset&&0!==e.offset||(this.__fitNeeded=!0),null==(h=this.__map)||!h.__mapNotLoadedSchedule((b=this,function(){return b.showResult(e,t)})))if(0===(I=(null!=(h=t.aggregations)&&null!=(h=h.hashes)?h.buckets:void 0)||[]).length)this.__map.addDataToSource(T.source,{type:"FeatureCollection",features:[]});else{for(y=[],a=[],s=0,_=I.length;s<_;s++)(r=I[s]).doc_count>T.BUCKET_MAX_OBJECTS?a.push(r):0<r.doc_count&&y.push(r);if(0<y.length){for(u=0,c=(f=(w=CUI.util.copyObject(e,!0)).search).length;u<c;u++)null!=(g=f[u])&&g.geo_bounding_box&&w.search.splice(w.search.indexOf(g),1);for(n=[],o=this.__getRequestMapBounds(),i=function(e){return e.geo_center.lon>=o.top_left.lon&&e.geo_center.lon<=o.bottom_right.lon&&e.geo_center.lat>=o.bottom_right.lat&&e.geo_center.lat<=o.top_left.lat},l=m=0,p=y.length;l<p;l++)i(r=y[l])?n.push({type:"geo_bounding_box",field:"_standard.geo.1",bool:"should",geo_bounding_box:{top_left:r.key,bottom_right:r.key}}):m++;d={type:"geo_bounding_box",field:"_standard.geo.1",bool:"must",geo_bounding_box:o},C=[],v=function(e,t){for(var o,n=[],r=o=0,a=e.length,i=t;0<i?o<a:a<o;r=o+=i)n.push(e.slice(r,r+t));return n},console.debug("ResultMap.showResult: Zoom level:",this.__map.getZoom(),"Precision:",this.__map.getPrecision(),"Buckets returned:",I.length," Rejected buckets:",m),0===n.length&&n.push(d),CUI.chunkWork.call(this,{items:n,chunk_size:T.MAX_CONCURRENT_BUCKETS_REQUESTS*T.BUCKETS_PER_REQUEST,call:function(e){var t=new CUI.Deferred,o=[];return v(e,T.BUCKETS_PER_REQUEST).forEach(function(e){return e.push(d),(g=CUI.util.copyObject(w.search,!0)).push({type:"complex",search:e}),e=ez5.api.search({data:{debug:"ResultMapSmallClustersRequest"},json_data:{format:"standard",offset:0,limit:1e3,objecttypes:w.objecttypes,search:g}}).done(function(e){return C=C.concat(e.objects)}),o.push(e)}),CUI.whenAll(o).done(function(){return t.resolve()}),t.promise()}}).done((S=this,function(){var e=a.map(function(e){return{type:"Feature",geometry:{type:"Point",coordinates:[e.geo_center.lon,e.geo_center.lat]},properties:{doc_count:e.doc_count,obj_count:e.doc_count}}});if(e=(e=S.__processResultObjects(C,e)).filter(function(e){return"Point"===e.geometry.type}),1===t.count&&(S.__fitNeeded=!1),S.__map.addDataToSource(T.source,{type:"FeatureCollection",features:e},S.__fitNeeded),S.__fitNeeded)return S.__fitNeeded=!1})).fail(function(e){return console.error(e)})}}},T.prototype.__processResultObjects=function(e,t){var n,r,o,a,i,s,u,l,_,c,p;if(null==t&&(t=[]),this.__resultObjects=[],turf)for(o=0,i=e.length;o<i;o++)if(u=e[o],(_=new ResultObject).setData(u),this.__resultObjects.push(_),(p=_.getGeoStandard())&&0<p.length)for(a=r=0,s=p.length;a<s;a++)0<(null!=(c="Feature"===(null!=(c=null!=(c=p[a])&&c.features||null==c||!c.coordinates?c:{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Point",coordinates:c.coordinates},properties:{}}]})?c.type:void 0)&&"Point"===(null!=c&&null!=(l=c.geometry)?l.type:void 0)?{type:"FeatureCollection",features:[c]}:c)&&null!=(l=c.features)?l.length:void 0)&&(n=[],turf.featureEach(c,function(e,t){var o;return null==e.properties&&(e.properties={}),n=[],"Point"!==e.geometry.type&&1<c.features.length&&n.push(t),"Point"!==e.geometry.type&&1===c.features.length&&(t=CUI.util.copyObject(e,!0),o=GeoJsonMap.getCenterCoordsForFeature(e),e.geometry.type="Point",e.geometry.coordinates=o,e.properties.original_feature=t.properties),e.properties.global_object_id=_.getGlobalObjectId(),e.properties.obj_count=1,e.properties.feature_index=r,r++}),n.forEach(function(e){return c.features.splice(e,1)}),t=t.concat(c.features));return t},T.prototype.addToRequest=function(e){var t,o;if(T.__super__.addToRequest.call(this,e),this.__map&&(t=this.__map.__map.getSize())&&0!==t[0]&&0!==t[1])return e.limit=0,this.__map.getZoom(),t=this.__map.getPrecision(),o=this.__getRequestMapBounds(),e.aggregations||(e.aggregations={}),e.aggregations.bounds={type:"geo_bounds",field:"_standard.geo.1"},e.aggregations.hashes={type:"geohash_grid",field:"_standard.geo.1",precision:t},e.search.push({type:"geo_bounding_box",field:"_standard.geo.1",geo_bounding_box:o}),this},T.debounce=function(r,a,i){var s;return null==i&&(i=!1),s=null,function(){var e=this,t=arguments,o=function(){if(s=null,!i)return r.apply(e,t)},n=i&&!s;if(null!=s&&clearTimeout(s),s=setTimeout(o,a),n)return r.apply(e,t)}},T.prototype.__onMapMoveEnd=function(){var e,t=new Request;return t.__map_executed=!0,t.avoid_wait_block=!0,null!=(e=this.getSearch())?e.execute(t):void 0},T.prototype.__getRequestMapBounds=function(){var e,t,o=function(e){for(var t=e;t<-180;)t+=360;for(;180<t;)t-=360;return t},n=this.__map.getBounds(),o=360<Math.abs(n.getNorthWest().lng-n.getSouthEast().lng)?(e=-180,180):(e=o(n.getNorthWest().lng),o(n.getSouthEast().lng));return o<e&&(e=(t=[o,e])[0],o=t[1]),{top_left:{lat:n.getNorthWest().lat,lon:e},bottom_right:{lat:n.getSouthEast().lat,lon:o}}},T.prototype.__renderPopup=function(e){var t,o,n,r,a;if(0<(null!=(n=this.__resultObjects)?n.length:void 0))for(t=0,o=(r=this.__resultObjects).length;t<o;t++)if((a=r[t]).getGlobalObjectId()===this.__map.getFeatureProperties(e).global_object_id)return a.renderCardDetail();return null},T.prototype.__getMarkerBySignature=function(e,t){return e.find(function(e){return e.signature===t})||null},T.prototype.__onRenderFeatures=function(e,t){var o,n,r,a,s,i,u,l,_,c,p,d,h,f,m,g,y,C,w,v,b,I,S,M,F,U,k,P,E,O=[],x=[];for(null==this.__renderedMarkers&&(this.__renderedMarkers=[]),null==this.__renderedClusters&&(this.__renderedClusters=[]),i=function(e){return e[0]+"-"+e[1]},s=function(e){return P.__map.getFeatureProperties(e).global_object_id+"-"+P.__map.getFeatureProperties(e).feature_index},l=0,p=(b=(P=this).__renderedMarkers).length;l<p;l++)(g=b[l]).onScreen=!1;for(_=0,d=(I=this.__renderedClusters).length;_<d;_++)(o=I[_]).onScreen=!1;for(c=0,h=t.length;c<h;c++)r=t[c],null!=(S=this.__map.getFeatureProperties(r))&&S.doc_count&&x.push(r),null!=(S=this.__map.getFeatureProperties(r))&&S.global_object_id&&!O.find(function(e){return s(e)===s(r)})&&"Point"===this.__map.getFeatureType(r)&&O.push(r),!this.__map.isFeatureCluster(r)||x.find((t=>function(e){return t.__map.getClusterId(e)===t.__map.getClusterId(r)})(this))||x.push(r);for(y=0,f=x.length;y<f;y++)o=x[y],U=!1,(k=null!==this.__map.getClusterId(o)?this.__renderedClusters.find((t=>function(e){return t.__map.getClusterId(e.feature)===t.__map.getClusterId(o)})(this))||null:(U=!0,this.__renderedClusters.find((t=>function(e){return i(t.__map.getFeatureCoordinates(e))===i(t.__map.getFeatureCoordinates(o))})(this))||null))?k.onScreen=!0:(U?n=new CUI.Label({text:""+o.properties.doc_count}).DOM:(o=>function(e,t){return o.__map.updateClusterLabel(t,e)})(this)(n=new CUI.Label({text:"..."}).DOM,o),k=i(this.__map.getFeatureCoordinates(o)),(U=new CUI.dom.div("result-map-cluster")).appendChild(n),CUI.dom.setAttribute(U,"marker-signature",k),(k={signature:k,feature:o,coordinates:this.__map.getFeatureCoordinates(o),html:U,onScreen:!0}).html.addEventListener("click",(t=>function(e){(g=t.__getMarkerBySignature(t.__renderedClusters,e.currentTarget.getAttribute("marker-signature")))&&t.__map.zoomToCluster(g.feature,T.source)})(this)),this.__map.addMarker(k),this.__renderedClusters.push(k));for(E=this,a=function(t){var e,o,n,r,a,i=E.__renderedMarkers.find(function(e){return s(e.feature)===s(t)})||null;if(i)return i.onScreen=!0;for(a=[],o=0,e=(n=E.__resultObjects).length;o<e;o++){if((r=n[o]).getGlobalObjectId()===E.__map.getFeatureProperties(t).global_object_id){r=E.renderObject(r,s(t)),g={signature:s(t),feature:t,coordinates:E.__map.getFeatureCoordinates(t),html:r,onScreen:!0,anchor:"bottom-center"},E.__map.addMarker(g),E.__renderedMarkers.push(g);break}a.push(void 0)}return a},C=0,m=O.length;C<m;C++)a(r=O[C]);if(0<this.__renderedClusters.length)for(u=w=M=this.__renderedClusters.length-1;M<=0?w<=0:0<=w;u=M<=0?++w:--w)this.__renderedClusters[u].onScreen||(this.__map.removeMarker(this.__renderedClusters[u]),this.__renderedClusters.splice(u,1));if(0<this.__renderedMarkers.length)for(u=v=F=this.__renderedMarkers.length-1;F<=0?v<=0:0<=v;u=F<=0?++v:--v)this.__renderedMarkers[u].onScreen||(this.__map.removeMarker(this.__renderedMarkers[u]),this.__renderedMarkers.splice(u,1))},T.prototype.__onMarkerClicked=function(e){return this.getCollectionSelection().selectAndScrollByGlobalId(this.__map.getFeatureProperties(e.feature).global_object_id)},T.prototype.renderObject=function(e,t){var o,n,r,a,i,s,u,l,_,c,p,d,h=this.getSettings(),f=function(e){return"sm"===h.marker_size?CUI.dom.addClass(e,"size-mini"):"md"===h.marker_size?CUI.dom.addClass(e,"size-midi"):"lg"===h.marker_size?CUI.dom.addClass(e,"size-maxi"):void 0};if(d=this,u=function(e){return CUI.dom.setAttribute(e,"marker-signature",t),e.addEventListener("click",function(e){e=d.__getMarkerBySignature(d.__renderedMarkers,e.currentTarget.getAttribute("marker-signature"));if(e)return d.__onMarkerClicked(e)}),e.addEventListener("mouseenter",function(e){e=d.__getMarkerBySignature(d.__renderedMarkers,e.currentTarget.getAttribute("marker-signature"));if(e)return d.__map.showPopup(e.coordinates,e.feature,[0,-e.html.offsetHeight-5])}),e.addEventListener("mouseleave",function(e){return d.__map.removePopup()})},"standard"!==h.marker_format)return u(i=CUI.dom.div("map-marker-pin")),f(i),p=new CUI.Icon({class:"custom-icon",icon:"fa-map-marker"}),i.insertAdjacentHTML("afterbegin",'<svg viewBox="0 0 16.32177 20.187037"><path fill="#000000" d="m 8.1359244,0.1192069 c -4.41828,0 -8,4.00258 -8,8.5 0,4.4622001 2.55332,9.3124001 6.5371,11.1744001 0.9286,0.4341 1.9972,0.4341 2.9258,0 3.9837996,-1.862 6.5370996,-6.7122 6.5370996,-11.1744001 0,-4.49742 -3.5817,-8.5 -7.9999996,-8.5 z"/></svg>'),i.appendChild(p.DOM),i;if(u(p=CUI.dom.div("map-marker-image")),f(p),c=(null!=(u=(l=e.getStandard(e.data)).eas)?u[1]:void 0)||[],i=CUI.dom.div("map-card"),!e.getMask().hasStandardEASFields()||CUI.util.isEmpty(c))i.appendChild(EAS.getNoAssetInObjecttypePlaceholder().DOM);else{for(n=new EASField,o=[],r=a=0,s=c.length;a<s;r=++a)_=c[r],CUI.util.isPlainObject(_)?o.push(new Asset(n,_,c,this.data)):(o.push(new Asset(n,{_error:{code:"result.object.asset.faulty_data_from_server"}})),console.error("ResultObject.__render: standard.eas does not contain value",l,this.getData(),this));f=o[0].getImgElement(null,null,{for_print:!1,show_hourglass:!0,alt:StandardField.getStandardText(e.data)}),i.appendChild(f)}return p.appendChild(i),p},T.prototype.getDefaultSettings=function(){return{marker_format:"icon",marker_size:"sm"}},T.prototype.saveSettings=function(){},T.prototype.getSettings=function(){return this.settings},T.prototype.applySettings=function(){var o;this.__renderedMarkers.forEach((o=this,function(t){var e;t.html&&(e=o.__resultObjects.find(function(e){return e.getGlobalObjectId()===o.__map.getFeatureProperties(t.feature).global_object_id}),e=o.renderObject(e,t.signature),t.html.replaceWith(e),t.html=e)}))},T})(ResultManagerResult),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapSearchManager=(()=>{function a(){return a.__super__.constructor.apply(this,arguments)}return extend(a,ResultMap),a.SETTINGS_KEY="search.main.map.settings",a.prototype.initOpts=function(){return a.__super__.initOpts.call(this),this.addOpts({collection:{check:function(e){return e instanceof CollectionSelection}}}),this.removeOpt("container"),this.__linkedToSearch=!0,this.settings=ez5.session.getPref(a.SETTINGS_KEY)||this.getDefaultSettings()},a.prototype.__getMapOpts=function(){var e,n,r;return this._unlinkButton=new CUI.Button({icon_inactive:"fa-chain-broken",icon_active:"fa-link",switch:!0,tooltip:{text:"Link/Unlink the map from the current search results - Unlink let you explore the map without affecting the search results"},active:!0,activate_initial:!1,group:"upper-right-tools",onActivate:function(e,t,o){return r.toggleLinkMapFromSearch(!0)},onDeactivate:(n=r=this,function(e,t,o){return n.toggleLinkMapFromSearch(!1)})}),(e=a.__super__.__getMapOpts.call(this)).buttonsUpperLeft=[this.getFilterBoundsButton()],e.buttonsUpperRight=[this._unlinkButton],e},a.prototype.toggleLinkMapFromSearch=function(e){return this.__linkedToSearch=e},a.prototype.init=function(){var o,e;if(this.__enabled&&!this.__initialized)return(e=a.__super__.init.call(this)).done((o=this,function(){return o._collection&&o._collection.on({type:["insert","select","remove"],instance:o,call:function(e,t){e="remove"===e._type?[]:null!=t?t.collection_objects:void 0;o.__selectionChanged(e)}}),o.__initialized=!0})),e},a.prototype.__onMapReady=function(e){return a.__super__.__onMapReady.call(this),this.getSearch().execute()},a.prototype.afterInit=function(){},a.prototype.enable=function(){return this.__enabled=!0,this.init()},a.prototype.disable=function(){return this.__enabled=!1,this.getSearch().execute()},a.prototype.addToRequest=function(e){if(this.__enabled&&this.__initialized)return a.__super__.addToRequest.call(this,e)},a.prototype.showResult=function(e,t){if(this.__enabled&&this.__initialized)return e.__map_executed||this._unlinkButton.setActive(!0),a.__super__.showResult.call(this,e,t)},a.prototype.getResultContainer=function(){var e;return"function"==typeof(e=this.getSearch()).getMapManagerContainer?e.getMapManagerContainer():void 0},a.prototype.getFilterBoundsButton=function(){var e;return this.__filterBoudsButton||(this.__filterBoudsButton=new CUI.Button({icon:"fa-filter",tooltip:{text:"Adds the current map bounds to the current search as an input query"},group:"upper-left-tools",onClick:(e=this,function(){return e.addGeoBoundingBoxQueryElement()})})),this.__filterBoudsButton},a.prototype.__hasGeoBoundingBoxFilter=function(){var e=this.getSearch().getSearchManagers().find(function(e){return e instanceof SearchInput});return!!e&&e.query.some(function(e){return e instanceof QueryElementGeoBoundingBox})},a.prototype.__onMarkerClicked=function(e){return this.__linkedToSearch?a.__super__.__onMarkerClicked.call(this,e):this.getCollectionSelection().loadInSidebar({global_object_id:this.__map.getFeatureProperties(e.feature).global_object_id})},a.prototype.__onMapMoveEnd=function(){var e,t=new Request;return this.__linkedToSearch||(t.exclusive_show=!0,(e=this.getSearch().getSearchManagers().filter(function(e){return!(e instanceof ResultManagerResult)})).push(this),t.searchManagers=e),t.__map_executed=!0,t.avoid_wait_block=!0,null!=(e=this.getSearch())?e.execute(t):void 0},a.prototype.getCollectionSelection=function(){return this._collection},a.prototype.__selectionChanged=function(e){var t,o,n,r,a,i,s,u,l,_;if(this.__initialized&&this.__enabled&&!CUI.util.isEmpty(this.__renderedMarkers))if(0===e.length){if(this._last_selected_objects!==[])for(n=0,a=(u=this.__renderedMarkers).length;n<a;n++)s=u[n],CUI.dom.removeClass(s.html,"selected");this._last_selected_objects=[]}else{if(o=new Set(e.map(function(e){return e.getGlobalObjectId()})),o=new Set(e.map(function(e){return e.getGlobalObjectId()})),this._last_selected_objects&&o.size===this._last_selected_objects.size){for(l=!0,r=0,i=o.length;r<i;r++)if(t=o[r],!this._last_selected_objects.has(t)){l=!1;break}if(l)return}this._last_selected_objects=o,this.__renderedMarkers.forEach((_=this,function(e){o.has(_.__map.getFeatureProperties(e.feature).global_object_id)?CUI.dom.addClass(e.html,"selected"):CUI.dom.removeClass(e.html,"selected")}))}},a.getManagerButton=function(e){return null==e&&(e={}),e=CUI.Element.readOpts(e,"MapSearchManager.getManagerButton",{onActivate:{check:Function},onDeactivate:{check:Function}}),new LocaButton({switch:!0,ui:"search.main.map.button",loca_key:"search.main.map.button",group:"map",onActivate:e.onActivate,onDeactivate:e.onDeactivate})},a.prototype.getManagerSettingButton=function(){var e;return this.__mapManagerSettingsBtn=new LocaButton({ui:"search.main.map.settings.button",class:"ez5-result-manager-button-options",loca_key:"result.manager.button.options",group:"map",onClick:(e=this,function(){return e.getSettingsPopover().show()})}),this.__mapManagerSettingsBtn},a.prototype.getSettingsPopover=function(e){var t,o,n;return null==e&&(e={}),t=new CUI.Popover({element:this.__mapManagerSettingsBtn,backdrop:{policy:"click"},class:"view-select-popover",pane:{header_left:new LocaLabel({loca_key:"search.main.map.settings.title"}),padded:!0,content:function(){var e=n.getSettings();return new CUI.Form({data:e,fields:[{type:CUI.Options,name:"marker_format",form:{label:$$("search.main.map.settings.marker_format")},radio:!0,horizontal:!1,options:[{value:"standard",text:$$("search.main.map.settings.marker_format.standard")},{value:"icon",text:$$("search.main.map.settings.marker_format.icon")}]},{type:CUI.Options,name:"marker_size",form:{label:$$("search.main.map.settings.marker_size")},radio:!0,horizontal:!1,options:[{value:"sm",text:$$("search.main.map.settings.marker_size.sm")},{value:"md",text:$$("search.main.map.settings.marker_size.md")},{value:"lg",text:$$("search.main.map.settings.marker_size.lg")}]}],onDataChanged:function(){return n.applySettings(),t.changes=!0}}).start()}},onHide:(o=n=this,function(){return t.changes&&o.saveSettings(),"function"==typeof e.onHide?e.onHide(t.changes):void 0})})},a.prototype.saveSettings=function(){return ez5.session.savePref(a.SETTINGS_KEY,this.settings,!0)},a})(),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonMap=(e=>{function r(e){r.__super__.constructor.call(this,e)}return extend(r,e),r.prototype.initOpts=function(){return r.__super__.initOpts.call(this),this.addOpts({renderPopup:{check:Function},onRender:{check:Function},onLoad:{check:Function},searchInput:{check:Boolean,default:!0},tilesSelector:{check:Boolean,default:!0},defaultSource:{check:String,default:"fylr-default"},styleFunction:{check:Function}})},r.prototype.readOpts=function(){var e,t,o,n;if(r.__super__.readOpts.call(this),this._searchInput&&(this.__searchInputData={},e=new MapSearchSelector({data:this.__searchInputData,name:"mapSearchInput",placeholder:"Search for a location",onFeatureSelected:(t=this,function(e){return t.fitData(e,.1)})}),this._buttonsUpperLeft?this._buttonsUpperLeft.push(e.start()):this._buttonsUpperLeft=[e.start()]),this._tilesSelector&&1<this.__getTilesSelectorOptions().length)return this.__tilesSelectorData={},e=new CUI.Select({options:function(){return n.__getTilesSelectorOptions()},name:"mapTileType",data:(n=this).__tilesSelectorData,onDataChanged:(o=this,function(){return o.__onTilesSelectorChange()})}),this._buttonsUpperRight?this._buttonsUpperRight.push(e.start()):this._buttonsUpperRight=[e.start()]},r.load=function(e){var t=new CUI.Deferred;return this.__loadTurf().done(function(){switch(r.getMapType()){case"mapbox":return MapboxMap.loadDependencies().done(function(){return t.resolve(new MapboxMap(e))}).fail(function(e){return t.reject(e)});case"ol":return OpenLayersMap.loadDependencies().done(function(){return t.resolve(new OpenLayersMap(e))}).fail(function(e){return t.reject(e)});default:return CUI.util.assert(!1,"Unknown map type: "+mapType),CUI.rejectedPromise()}}).fail(t.reject),t.promise()},r.__loadTurf=function(){var e;return r.__turfLoaded?CUI.resolvedPromise():(e=ez5.pluginManager.getPlugin("geo-json").getBareBaseURL()+"/thirdparty/turf/turf.min.js",(e=CUI.loadScript(e)).done(function(){return r.__turfLoaded=!0}),e)},r.getMapType=function(){var e=null!=(e=r.getConfig())&&null!=(e=e.map_type)?e.select:void 0;return e=CUI.util.isEmpty(e)?"ol":e},r.getMapClass=function(){var e=r.getMapType();switch(e){case"mapbox":return MapboxMap;case"ol":return OpenLayersMap;default:return CUI.util.assert(!1,"Unknown map type: "+e),null}},r.getConfig=function(){return ez5.session.getBaseConfig("plugin","geo-json")},r.canLoad=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".canLoad: needs to be implemented.")},r.prototype.addSource=function(e,t){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".addSource needs to be implemented.")},r.prototype.fitData=function(e,t,o){return null==o&&(o=!0),CUI.util.assert(!1,CUI.util.getObjectClass(this)+".fitData needs to be implemented.")},r.prototype.__addLayers=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".__addLayers needs to be implemented.")},r.prototype.addDataToSource=function(e,t,o){return null==o&&(o=!1),CUI.util.assert(!1,CUI.util.getObjectClass(this)+".addDataToSource needs to be implemented.")},r.prototype.getBounds=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getBounds needs to be implemented.")},r.prototype.getMapCoordsFromEvent=function(e){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getMapCoordsFromEvent needs to be implemented.")},r.prototype.getPrecision=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getPrecision needs to be implemented.")},r.prototype.getFeatureProperties=function(e){return e.properties},r.prototype.getFeatureGeometry=function(e){return e.geometry},r.prototype.getFeatureType=function(e){return e.geometry.type},r.prototype.getFeatureCoordinates=function(e){return e.geometry.coordinates},r.prototype.isFeatureCluster=function(e){return!1},r.prototype.getClusterId=function(e){return null},r.prototype.updateClusterLabel=function(e,t){},r.prototype.zoomToCluster=function(e,t){},r.getCenterCoordsForFeature=function(e){return turf.center(e).geometry.coordinates},r.flattenArrayOfFeatures=function(e){var t,o,n,r,a;for(CUI.util.isArray(e)||(e=[e]),t=[],n=0,r=e.length;n<r;n++)(o=null!=(o=e[n]).type&&"Feature"!==(a=o.type)&&"FeatureCollection"!==a?turf.feature(o):o).features||"Feature"!==o.type?o.features.forEach(function(e){return"FeatureCollection"===e.type?e.features.forEach(function(e){return t.push(e)}):t.push(e)}):t.push(o);return turf.featureCollection(t)},r.decomposePolygonToBoundingBoxes=function(t,e,o){var n,r;return null==e&&(e=1),null==o&&(o="kilometers"),"Polygon"!==(r=turf.getType(t))&&"MultiPolygon"!==r?null:(r=turf.bbox(t),r=turf.squareGrid(r,e,{units:o}),n=[],r.features.forEach(function(e){e=turf.intersect(e,t);if(e)return n.push(e)}),turf.featureCollection(n))},r.prototype.__getTilesSelectorOptions=function(){return[]},r.prototype.__onTilesSelectorChange=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".__onTilesSelectorChange needs to be implemented.")},r})(CUI.Map),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,OpenLayersMap=(()=>{function o(e){this.__isMapResizing=!1,o.__super__.constructor.call(this,e)}return extend(o,GeoJsonMap),o.prototype.initOpts=function(){return o.__super__.initOpts.call(this),this.addOpts({cluster:{check:Boolean,default:!0},drawFeatures:{check:Array,default:["Point","LineString","Polygon","MultiPolygon"]}})},o.canLoad=function(){return!0},o.loadDependencies=function(){var t;return o.__dependenciesLoaded?CUI.resolvedPromise():(t=new CUI.Deferred,(o.dependenciesPromises=[]).push(CUI.loadScript("https://cdn.jsdelivr.net/npm/ol@v10.2.1/dist/ol.js")),o.dependenciesPromises.push((new CUI.CSSLoader).load({url:"https://cdn.jsdelivr.net/npm/ol@v10.2.1/ol.css"})),CUI.whenAll(o.dependenciesPromises).done(function(){var e;return CUI.util.isEmpty(null!=(e=GeoJsonMap.getConfig())?e.custom_map_styles:void 0)?(o.__dependenciesLoaded=!0,t.resolve()):CUI.loadScript("https://cdn.jsdelivr.net/npm/ol-mapbox-style/dist/olms.js").done(function(){return o.__dependenciesLoaded=!0,t.resolve()})}),t.promise())},o.prototype.__getMapClassName=function(){return"cui-openlayers-map"},o.prototype.__onReady=function(){return this.__initZoom=this.__map.getView().getZoom(),this.__initCenter=this.__map.getView().getCenter(),this.__disableEnableZoomButtons(),"function"==typeof this._onReady?this._onReady(this):void 0},o.prototype.__buildMap=function(){var e,t,o,n,r,a,i,s,u,l,_,c;for(this.__mapReady=new CUI.Deferred,o=this.get("center"),r=new ol.View({center:ol.proj.fromLonLat([0,0]),zoom:2,projection:"EPSG:3857",extent:ol.proj.get("EPSG:3857").getExtent()}),this.__map=new ol.Map({target:o,view:r,layers:[],controls:[],interactions:[new ol.interaction.DragPan,new ol.interaction.PinchZoom,new ol.interaction.MouseWheelZoom,new ol.interaction.DragZoom,new ol.interaction.DoubleClickZoom,new ol.interaction.DragRotate,new ol.interaction.KeyboardPan,new ol.interaction.KeyboardZoom]}),r=new ol.layer.Tile({source:new ol.source.OSM}),this.__map.addLayer(r),this.__vectorSource=new ol.source.Vector({features:[]}),null==this.__sources&&(this.__sources={}),r=this._defaultSource||"fylr-default",this.__sources[r]=this.__vectorSource,this._cluster?(this.__clusterCounter=0,this.__clusterSource=new ol.source.Cluster({distance:50,source:this.__vectorSource}),this.__clusterSource.on("addfeature",(a=this,function(e){e=e.feature;if(a.isFeatureCluster(e))return e.set("cluster_id",a.__clusterCounter++)})),this.__vectorLayer=new ol.layer.Vector({source:this.__clusterSource,style:function(e){e=e.get("features").length;return new ol.style.Style({image:new ol.style.Circle({radius:10,stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:"#3399CC"})}),text:new ol.style.Text({text:e.toString(),fill:new ol.style.Fill({color:"#fff"})})})}})):this.__vectorLayer=new ol.layer.Vector({source:this.__vectorSource}),this.__map.addLayer(this.__vectorLayer),this.__addLayers(),this.__map.once("rendercomplete",(i=this,function(){if(i.__mapReady.resolve(),i._onLoad)return i._onLoad(i)})),this._onRender&&this.__map.on("postrender",(s=this,function(){var e,t,o,n=s.__map.getView().calculateExtent(s.__map.getSize()),r=s.__vectorLayer.getSource().getFeaturesInExtent(n),a=[];if(s._cluster)for(t=0,o=r.length;t<o;t++)e=r[t],s.isFeatureCluster(e)?a.push(e):a.push(e.get("features")[0]);else a=r;return s._onRender(s,a)})),this._onClick&&this.__map.on("click",(u=this,function(e){var t=u.__map.forEachFeatureAtPixel(e.pixel,function(e){return e}),o=u.getMapCoordsFromEvent(e);return u._onClick(e,u,t,o)})),this._onZoomEnd&&this.__map.getView().on("change:resolution",(l=this,function(){if(!l.__isMapResizing)return l._onZoomEnd()})),this.__map.on("moveend",(_=this,function(e){if(_.removePopup(),!_.__isMapResizing)return _.__onMoveEnd(e)})),CUI.dom.waitForDOMInsert({node:this}).done((c=this,function(){return c.__onReady()})),this.__detailOverlay=new ol.Overlay({element:document.createElement("div"),autoPan:!1,positioning:"bottom-center",offset:[0,-25]}),this.__map.addOverlay(this.__detailOverlay),CUI.dom.setStyleOne(CUI.dom.parent(this.__mapTemplate.get("buttons-upper-left")),"pointer-events","none"),e=0,t=(n=["buttons-upper-left","buttons-upper-right","buttons-bottom-left","buttons-bottom-right"]).length;e<t;e++)CUI.dom.setStyleOne(this.__mapTemplate.get(n[e]),"pointer-events","all");return CUI.dom.setStyleOne(o,"padding","0px"),this.__map},o.prototype.isMapReady=function(){return"resolved"===this.__mapReady.state()},o.prototype.__mapNotLoadedSchedule=function(e){return!this.isMapReady()&&(this.__mapReady.done(function(){return e()}),!0)},o.prototype.getZoom=function(){return this.__map.getView().getZoom()},o.prototype.resize=function(e){var t;return(e=null==e?!1:e)||(this.__isMapResizing=!0,setTimeout((t=this,function(){return t.__isMapResizing=!1}),500)),this.__map.updateSize()},o.prototype.zoomIn=function(){var e=this.__map.getView();return e.setZoom(e.getZoom()+1)},o.prototype.zoomOut=function(){var e=this.__map.getView();return e.setZoom(e.getZoom()-1)},o.prototype.setCenter=function(){var e=this.__map.getView();return e.setCenter(ol.proj.fromLonLat([0,0])),e.setZoom(1)},o.prototype.addSource=function(e,t){var o,n;if(!this.__mapNotLoadedSchedule((n=this,function(){return n.addSource(e,t)})))return null==this.__sources&&(this.__sources={}),o=(new ol.format.GeoJSON).readFeatures(t,{featureProjection:"EPSG:3857"}),o=new ol.source.Vector({features:o}),this.__sources[e]=o,o=new ol.layer.Vector({source:o}),this.__map.addLayer(o),null==this.__layers&&(this.__layers={}),this.__layers[e]=o},o.prototype.getSource=function(e){var t;return null==e&&(e="fylr-default"),null!=(t=this.__sources)?t[e]:void 0},o.prototype.fitData=function(e,t,o,n){var r,a,i,s,u,l,_;if((null==t&&(t=100),null==o&&(o=!0),null==n&&(n=16),!this.__mapNotLoadedSchedule((_=this,function(){return _.fitData(e,t,o,n)})))&&this.__map){if(CUI.util.isEmpty(e)){if(!(l=null!=(l=this.__sources)?l["fylr-default"]:void 0))return;i=l.getFeatures()}else i=(new ol.format.GeoJSON).readFeatures(e,{featureProjection:"EPSG:3857"});if(0<i.length){for(r=ol.extent.createEmpty(),s=0,u=i.length;s<u;s++)a=i[s],ol.extent.extend(r,a.getGeometry().getExtent());if(!r.some(function(e){return!isFinite(e)}))return-1===n&&(n=(null!=(l=this.__map.getView())?l.getZoom():void 0)||16),this.__map.getView().fit(r,{padding:[t,t,t,t],duration:o?500:0,maxZoom:n})}}},o.prototype.addDataToSource=function(e,t,o){var n,r,a,i,s,u,l,_;if(null==o&&(o=!1),!this.__mapNotLoadedSchedule((l=this,function(){return l.addDataToSource(e,t,o)})))try{if(!(u=this.__sources[e]))return this.addSource(e,t);if(a=(new ol.format.GeoJSON).readFeatures(t,{featureProjection:"EPSG:3857"}),u.clear(),u.addFeatures(a),o){for(n=ol.extent.createEmpty(),i=0,s=a.length;i<s;i++)r=a[i],ol.extent.extend(n,r.getGeometry().getExtent());if(!n.some(function(e){return!isFinite(e)}))return setTimeout((_=this,function(){return _.__map.getView().fit(n,{duration:500,padding:[100,100,100,100],maxZoom:16})}),500)}}catch(e){return console.log(e)}},o.prototype.getDataFromSource=function(e){var e=this.__sources[e];if(e)return e=e.getFeatures(),(new ol.format.GeoJSON).writeFeaturesObject(e,{featureProjection:"EPSG:3857"})},o.prototype.addLayer=function(e){return this.__map.addLayer(e)},o.prototype.__addLayers=function(){var e,t;this.__drawPoints=0<=(null!=(e=this._drawFeatures)?e.indexOf("Point"):void 0),this.__drawLines=0<=(null!=(e=this._drawFeatures)?e.indexOf("LineString"):void 0),this.__drawPolygons=0<=(null!=(e=this._drawFeatures)?e.indexOf("Polygon"):void 0)||0<=(null!=(e=this._drawFeatures)?e.indexOf("MultiPolygon"):void 0),e=function(e){e=e.getGeometry().getType();return"Point"===e&&t.__drawPoints?new ol.style.Style({image:new ol.style.Circle({radius:5,fill:new ol.style.Fill({color:"#FFFFFF"}),stroke:new ol.style.Stroke({color:"#212121",width:3})})}):"LineString"===e&&t.__drawLines?new ol.style.Style({stroke:new ol.style.Stroke({color:"#212121",width:3})}):"Polygon"!==e&&"MultiPolygon"!==e||!t.__drawPolygons?void 0:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(240, 56, 0, 0.6)"}),stroke:new ol.style.Stroke({color:"#000",width:1})})},null!=(t=this)._styleFunction?this.__vectorLayer.setStyle(this._styleFunction):this.__vectorLayer.setStyle(e)},o.prototype.showPopup=function(e,t,o,n){var r;if(null==o&&(o=[0,0]),null==n&&(n=this.__detailOverlay),t=this._renderPopup(t)){for(r=n.getElement();r.firstChild;)r.removeChild(r.firstChild);return r.appendChild(t),n.setOffset(o),n.setPosition(ol.proj.fromLonLat(e))}},o.prototype.removePopup=function(e){return(e=null==e?this.__detailOverlay:e).setPosition(void 0)},o.prototype.getBounds=function(){var e=this.__map.getView().calculateExtent(this.__map.getSize()),t=ol.proj.toLonLat([e[0],e[1]],"EPSG:3857"),o=ol.proj.toLonLat([e[2],e[3]],"EPSG:3857");return{getNorthWest:function(){return{lng:t[0],lat:o[1]}},getSouthEast:function(){return{lng:o[0],lat:t[1]}}}},o.prototype.getFeatureProperties=function(e){return e.getProperties()},o.prototype.getFeatureGeometry=function(e){return e.getGeometry()},o.prototype.getFeatureType=function(e){return e.getGeometry().getType()},o.prototype.getFeatureCoordinates=function(e){return ol.proj.toLonLat(e.getGeometry().getCoordinates())},o.prototype.isFeatureCluster=function(e){return 1<(null!=(e=e.get("features"))?e.length:void 0)},o.prototype.getClusterId=function(e){return e.get("cluster_id")},o.prototype.updateClusterLabel=function(e,t){var o,n,r,a,i;if(e.get("doc_count"))i=e.get("doc_count");else for(n=i=0,r=(a=e.get("features")).length;n<r;n++)(o=a[n]).get("doc_count")?i+=o.get("doc_count"):i+=1;return CUI.dom.replace(t,new CUI.Label({text:""+i}).DOM)},o.prototype.zoomToCluster=function(e,t){var o,e=e.get("features")||[];if(0<e.length)return o=ol.extent.createEmpty(),e.forEach(function(e){return ol.extent.extend(o,e.getGeometry().getExtent())}),this.__map.getView().fit(o,{duration:500,padding:[100,100,100,100],maxZoom:16})},o.prototype.addMarker=function(e){var t,o=new ol.Feature({geometry:new ol.geom.Point(ol.proj.fromLonLat(e.coordinates))}),n=e.anchor||"center-center";return e.html?(n=new ol.Overlay({element:e.html,position:ol.proj.fromLonLat(e.coordinates),positioning:n}),this.__map.addOverlay(n),e.reference=n,e.html.addEventListener("wheel",(t=this,function(e){return e.preventDefault(),t.__map.getViewport().dispatchEvent(new WheelEvent("wheel",e))}))):(this.__vectorSource.addFeature(o),e.reference=o)},o.prototype.removeMarker=function(e){if(e.reference)return e.reference instanceof ol.Feature?this.__vectorSource.removeFeature(e.reference):e.reference instanceof ol.Overlay&&this.__map.removeOverlay(e.reference),delete e.reference},o.prototype.__disableEnableZoomButtons=function(){},o.prototype.easeTo=function(e,t){var o=this.__map.getView();if(null!=e&&2===e.length&&"number"==typeof t)return e=ol.proj.fromLonLat(e),o.animate({center:e,zoom:t,duration:500})},o.prototype.getMapCoordsFromEvent=function(e){var t;return null==e.coordinate?e.pixel&&(t=ol.proj.toLonLat(e.coordinate=this.__map.getCoordinateFromPixel(e.pixel))):t=ol.proj.toLonLat(e.coordinate),null==t?null:{lng:t[0],lat:t[1]}},o.prototype.getPrecision=function(){var e=this.getZoom(),e=13<=e?8:11<=e?7:9<=e?6:7<=e?5:5<=e?4:3;return e},o.prototype.__getTilesSelectorOptions=function(){var e,t,o,n,r,a,i=[{text:"Default",value:"default"},{text:"Satellite",value:"satellite"}];if(0<(null!=(n=GeoJsonMap.getConfig())&&null!=(n=n.custom_map_styles)&&null!=(n=n.styles)?n.length:void 0))for(t=e=0,o=(r=null!=(n=GeoJsonMap.getConfig())&&null!=(n=n.custom_map_styles)?n.styles:void 0).length;e<o;t=++e)a=r[t],i.push({text:a.name,value:t});return i},o.prototype.__onTilesSelectorChange=function(){var e,t,o,n=this.__tilesSelectorData.mapTileType;if("number"!=typeof n){for(e in this.__map.getLayers().clear(),t="satellite"===n?new ol.layer.Tile({source:new ol.source.XYZ({url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"})}):new ol.layer.Tile({source:new ol.source.OSM}),this.__map.addLayer(t),this.__map.addLayer(this.__vectorLayer),o=null!=this._layers)this.__map.addLayer(o[e]);return this.__map.renderSync()}if(null!=(n=null!=(t=GeoJsonMap.getConfig())&&null!=(t=t.custom_map_styles)&&null!=(t=t.styles)&&null!=(t=t[n])?t.value:void 0)){if(null==n.url)return olms.apply(this.__map,n);olms.apply(this.__map,n.url)}},o})(),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonFeatureItem=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this),this.addOpts({name:{check:String},feature:{check:"PlainObject",default:{}},is_valid:{check:Boolean,default:!0},validation_message:{check:String}})},t.prototype.readOpts=function(){return t.__super__.readOpts.call(this),this},t.prototype.renderContent=function(){var e,t,o=GeoJsonColumn.renderFeature(this._feature);return this._is_valid||(o.addClass("ez5-geo-feature-invalid"),e=new CUI.Icon({icon:"fa-exclamation-triangle",class:"ez5-geo-feature-warning-icon"}),t=new CUI.Label({text:this._validation_message||"Invalid feature for current editor configuration",class:"ez5-geo-feature-warning-text",size:"mini"}),e=new CUI.HorizontalLayout({class:"ez5-geo-feature-warning",left:{content:e},center:{content:t}}),o=new CUI.VerticalLayout({class:"ez5-geo-feature-with-warning",top:{content:o},bottom:{content:e}})),o},t})(CUI.ListViewTreeNode),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,indexOf=[].indexOf||function(e){for(var t=0,o=this.length;t<o;t++)if(t in this&&this[t]===e)return t;return-1},MapEditor=(e=>{function s(){return s.__super__.constructor.apply(this,arguments)}return extend(s,e),s.MAP_SOURCE_NAME="fylr-default",s.MAP_EDITOR_SOURCE_NAME="fylr-map-editor",s.prototype.initOpts=function(){return s.__super__.initOpts.call(this),this.addOpts({field:{mandatory:!0,check:Field},data:{check:"PlainObject"},mode:{mandatory:!0,default:"editor",check:["editor","detail"]},done:{default:function(){},check:Function},basic_mode:{default:!1,check:Boolean},single_feature:{default:!1,check:Boolean},allowed_feature_types:{default:"full",check:function(e){return"full"===e||"points"===e||"lines"===e||"polygons"===e||"geocoder"===e||CUI.util.isArray(e)&&e.every(function(e){return"points"===e||"lines"===e||"polygons"===e||"geocoder"===e})}},popover_element:{check:function(e){return CUI.util.isElement(e)||CUI.util.isElement(null!=e?e.DOM:void 0)}}})},s.prototype.readOpts=function(){return s.__super__.readOpts.call(this),this.mode=this._mode,this.basic_mode=this._basic_mode,this.popover_element=this._popover_element,this.basic_mode?(this.single_feature=!0,this.allowed_feature_types="points"):(this.single_feature=this._single_feature,this.allowed_feature_types=this._allowed_feature_types),CUI.util.isEmpty(this._data)&&(this._data=GeoJsonColumn.emptyFeatureCollection()),this.data=this._data||GeoJsonColumn.emptyFeatureCollection(),this.__features=this.__getFeaturesFromData(),this.field=this._field,this.__done=this._done,this.__dataValidation=this.__validateExistingData(),this.basic_mode?this.__tmpl=new CUI.Template({name:"map-editor-basic",init_flex_handles:!0,map:{tools:!0,map_view:!0}}):this.__tmpl=new CUI.Template({name:"map-editor",init_flex_handles:!0,map:{list:!0,tools:!0,map_view:!0,feature_form:!0}}),this.basic_mode||(this.featuresList=this.__tmpl.map.list,this.__renderFeaturesList(),this.__renderFeatureDetail()),this.mapView=this.__tmpl.map.map_view,this.tools=this.__tmpl.map.tools,this.init(),this.basic_mode?this.__createPopover():this.__createModal(),CUI.scheduleCallback({ms:100,call:(e=this,function(){return e.__showDataWarnings(e.__dataValidation)})});var e},s.prototype.__createPopover=function(){var e;return this.popover=new CUI.Popover({element:this.popover_element,ui:"map.editor.popover",class:"ez5-map-editor-popover ez5-map-editor-popover--basic",placement:"w",cancel:!0,onCancel:function(){},pane:{content:this.__tmpl,header_left:new CUI.Label({text:"Map Editor"}),footer_right:(e=this,function(){return e.buttons()})}}),this.popover.show()},s.prototype.__createModal=function(){var e;return this.modal=new CUI.Modal({ui:"map.editor.modal",class:"ez5-map-editor-modal ez5-map-editor-modal--"+this.mode,fill_space:"both",cancel:!0,onCancel:function(){},pane:{content:this.__tmpl,header_left:new LocaLabel({loca_key:"map.editor.title."+this.mode}),footer_right:(e=this,function(){return e.buttons()})}}),this.modal.show()},s.prototype.init=function(){var e,t,o,n,r={clickable:!1,cluster:!1,zoomToFitAllMarkersOnInit:!0,onClick:function(e,t){return o.__onMapClick(e,t)},onReady:function(){t.__onMapReady(),t.__map.resize()},onLoad:(e=t=o=this,function(){e.__onMapLoad()})};GeoJsonMap.load(r).done((n=this,function(e){return n.__map=e,CUI.dom.append(n.mapView,n.__map),n.renderTools()})).fail(function(e){return console.error(e)})},s.prototype.__showMapContextButtonBar=function(e,t){var o,n,r,a=[],e=new CUI.Label({text:e});if(a.push(e),t)if(t instanceof Array)for(n=0,r=t.length;n<r;n++)o=t[n],a.push(o);else a.push(t);return this.__mapContextButtonBar=new CUI.Buttonbar({class:"ez5-selected-objects-badge",buttons:a}),CUI.dom.append(this.__map.__mapTemplate.get("buttons-bottom-center"),this.__mapContextButtonBar)},s.prototype.__hideMapContextButtonBar=function(){this.__mapContextButtonBar&&(this.__mapContextButtonBar.hide(),this.__mapContextButtonBar.destroy(),this.__mapContextButtonBar=null)},s.prototype.__onMapLoad=function(){var e=this.__getGeoJsonFromFeatures([]);this.__map.addSource(s.MAP_EDITOR_SOURCE_NAME,e)},s.prototype.__isFeatureTypeAllowed=function(e){return"full"===this.allowed_feature_types||(CUI.util.isArray(this.allowed_feature_types)?0<=indexOf.call(this.allowed_feature_types,e):this.allowed_feature_types===e)},s.prototype.__getFeatureType=function(e){switch(null!=e&&null!=(e=e.geometry)?e.type:void 0){case"Point":return"points";case"LineString":return"lines";case"Polygon":return"polygons";default:return null}},s.prototype.__validateExistingData=function(){var e,t,o,n,r,a,i,s;if(!this.__features||0===this.__features.length)return{valid:!0,warnings:[]};for(s=[],i=[],n=[],o=0,r=(a=this.__features).length;o<r;o++)e=a[o],((t=this.__getFeatureType(e))&&this.__isFeatureTypeAllowed(t)?i:n).push(e);return 0<n.length&&s.push({type:"invalid_types",count:n.length,features:n}),this.single_feature&&1<this.__features.length&&s.push({type:"too_many_features",count:i.length,features:i.slice(1)}),{valid:0===s.length,warnings:s,validFeatures:i,invalidFeatures:n}},s.prototype.__showDataWarnings=function(e){var t,o,n,r,a,i,s;if(!e.valid){for(i=[],o=0,n=(r=e.warnings).length;o<n;o++)switch((a=r[o]).type){case"invalid_types":t="full"===this.allowed_feature_types?"all types":CUI.util.isArray(this.allowed_feature_types)?this.allowed_feature_types.join(", "):this.allowed_feature_types,i.push(a.count+" feature(s) have invalid types. Only "+t+" are allowed in this editor.");break;case"too_many_features":i.push(a.count+" feature(s) found, but this editor only allows one feature at a time.")}return 0<i.length&&(s=i.join("\n"),s+="\n\nYou can only delete these incompatible features. To edit them, use the full map editor or change the field configuration."),CUI.problem({text:s})}},s.prototype.__hideDataWarnings=function(){if(this.__warningBar)return this.__warningBar.destroy(),this.__warningBar=null},s.prototype.getTools=function(){var o,n,r,a,e=[];return this.__isFeatureTypeAllowed("points")&&e.push(this.__drawPointToolboxTool=new ToolboxTool({name:"add-point",loca_key:"map.editor.tool.add_point",group:"geometry",run:(o=this,function(e,t){return o.__enableDrawMode("point",t)})})),this.__isFeatureTypeAllowed("polygons")&&e.push(this.__drawPolygonToolboxTool=new ToolboxTool({name:"add-polygon",loca_key:"map.editor.tool.add_polygon",group:"geometry",run:(n=this,function(e,t){return n.__enableDrawMode("polygon",t)})})),this.__isFeatureTypeAllowed("lines")&&e.push(this.__drawLineToolboxTool=new ToolboxTool({name:"add-line",loca_key:"map.editor.tool.add_line",group:"geometry",run:(r=this,function(e,t){return r.__enableDrawMode("line",t)})})),this.__isFeatureTypeAllowed("geocoder")&&e.push(this.__geoCoderToolboxTool=new ToolboxTool({name:"geocoder",loca_key:"map.editor.tool.geocoder",group:"geometry",run:(a=this,function(e,t){return a.__enableDrawMode("geocoder",t)})})),e},s.prototype.renderTools=function(){var e,t,o,n,r,a,i,s,u;if("detail"!==this.mode){for(t=[],null==this.toolInstances&&(this.toolInstances=[]),o=0,r=(i=this.getTools()).length;o<r;o++)(u=i[o])&&(-1===CUI.util.idxInArray(u,this.toolInstances,function(e,t){return e.getName()===t.getName()})?this.toolInstances.push(u):u.destroy());for(n=0,a=(s=this.toolInstances).length;n<a;n++)(u=s[n]).$btn||(o=>{var e=o.getLabelKeys();o.getName(),e.icon=o.getIcon(),e.size="big",e.group=o.getGroup(),e.disabled=o.isDisabled(),e.onClick=function(e,t){return o.run(e,t)},o.$btn=new LocaButton(e)})(u),t.push(u.$btn);return e=new CUI.Buttonbar({buttons:t}),this.__tmpl.replace(e,"tools"),this}},s.prototype.buttons=function(){var t;return this.__doneButton=new LocaButton({loca_key:"asset.versions.button.done",ui:"map_editor.done.button",primary:!0,onClick:(t=this,function(e){return(t.basic_mode?t.popover:t.modal).destroy(),t.__done(t.__getGeoJsonFromFeatures())})}),[this.__doneButton]},s.prototype.__renderFeatureDetail=function(){var a,e,i,t,o,s,n,r,u,l;this.basic_mode||(this.__tmpl.map.feature_form.empty(),e=new CUI.EmptyLabel({text:'Select "Location" from list',centered:!0,markdown:!0}),this.selectedFeature&&(this.__selected_feature_saved_data=CUI.util.copyObjectV2(this.selectedFeature,!0),o=[],"Point"===this.selectedFeature.geometry.type?o=[{lng:this.selectedFeature.geometry.coordinates[0],lat:this.selectedFeature.geometry.coordinates[1]}]:"Polygon"===this.selectedFeature.geometry.type?CUI.util.isEmpty(this.selectedFeature.geometry.coordinates[0])||(o=this.selectedFeature.geometry.coordinates[0].map(function(e){return{lng:e[0],lat:e[1]}})):"LineString"===this.selectedFeature.geometry.type&&(o=this.selectedFeature.geometry.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})),a={type:null!=(t=this.selectedFeature)&&null!=(t=t.geometry)?t.type:void 0,name:null!=(t=this.selectedFeature)&&null!=(t=t.properties)?t.name:void 0,coordinates:o},t=new CUI.Button({icon:"fa-search",onClick:(u=this,function(){var e,t,o,n,r=null!=(n=u.selectedFeature)?n.geometry:void 0;if(null!=r){switch(o=t=null,r.type){case"Point":o=r.coordinates[0],t=r.coordinates[1];break;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":o=(e=turf.center(u.selectedFeature).geometry.coordinates)[0],t=e[1];break;default:return void console.log("Unsupported geometry type for reverse geocoding:",r.type)}return n=ez5.session.getConfigDatabaseLanguages().map(function(e){return e.split("-")[0]}).join(","),new CUI.XHR({url:"https://nominatim.openstreetmap.org/reverse?format=json&lat="+t+"&lon="+o+"&accept-language="+n}).start().done(function(e){var t;if(e.name)return(null!=(t=i.getFieldsByName("name"))?t[0]:void 0).setValue(e.name),a.name=e.name,s(),u.__checkDetailStatus()})}})}),r=this,s=function(){var e,t;return null==(e=r.selectedFeature).properties&&(e.properties={}),r.selectedFeature.properties.name=a.name,"Point"===a.type?t=[a.coordinates[0].lng,a.coordinates[0].lat]:"Polygon"===a.type?t=[t=a.coordinates.map(function(e){return[e.lng,e.lat]})]:"LineString"===a.type&&(t=a.coordinates.map(function(e){return[e.lng,e.lat]})),r.selectedFeature.geometry.coordinates=t},i=new CUI.Form({data:a,fields:[{type:CUI.Output,name:"type",form:{label:"Type"}},{type:CUI.Input,name:"name",form:{label:"Display Name"},controlElement:t},{type:CUI.DataTable,name:"coordinates",rowMove:!0,form:{label:"Coordinates"},fields:[{name:"lng",form:{label:"Longitude"},type:CUI.NumberInput,json_number:!0,decimalpoint:ez5.session.frontend_locale.numbers.decimal,separator:ez5.session.frontend_locale.numbers.grouping},{name:"lat",form:{label:"Latitude"},type:CUI.NumberInput,json_number:!0,decimalpoint:ez5.session.frontend_locale.numbers.decimal,separator:ez5.session.frontend_locale.numbers.grouping}]}],onDataChanged:(n=this,function(){return s(),n.__checkDetailStatus(),n.__updateFeaturesOnMap()})}),e=i.start()),o=new CUI.SimplePane({class:"cui-pane--window",title:"Detail",content:function(){return e},footer_right:(l=this,function(){if(l.selectedFeature)return l.__detail_save_btn=new CUI.Button({text:"Save",disabled:!0,ui:"map_editor.feature_form.button.save",primary:!0,onClick:function(){return s(),l.__renderFeaturesList(),l.__updateFeaturesOnMap(),l.__selected_feature_saved_data=CUI.util.copyObjectV2(l.selectedFeature,!0),l.__checkDetailStatus()}}),[new CUI.Button({text:"Cancel",ui:"map_editor.feature_form.button.cancel",onClick:function(){return Object.assign(l.selectedFeature,l.__selected_feature_saved_data),l.__selected_feature_saved_data=CUI.util.copyObjectV2(l.selectedFeature,!0),l.__checkDetailStatus(),l.__renderFeaturesList(),l.__updateFeaturesOnMap()}}),l.__detail_save_btn]})}),this.__tmpl.map.feature_form.append(o))},s.prototype.__checkDetailStatus=function(){if(this.selectedFeature)return CUI.util.isEqual(this.__selected_feature_saved_data,this.selectedFeature)?this.__detail_save_btn.disable():this.__detail_save_btn.enable()},s.prototype.__renderFeaturesList=function(e){var t,o,n,r,a,i,s,u,l,_,c,p,d,h,f;if(null==e&&(e=null),!this.basic_mode){for(this.featuresList.empty(),this.featuresTree=new CUI.ListViewTree({cols:["maximize"],no_hierarchy:!0,focusable:!1,maximize_horizontal:!0,maximize_vertical:!1,rowMove:!1,selectableRows:!0,onSelect:(_=this,function(e,t){return _.selectedFeature=t.node._feature,CUI.util.isEmpty(_.__drawMode)&&_.__map.fitData(_.selectedFeature,100,!0,-1),_.__renderFeatureDetail()}),onDeselect:function(){return console.log("Deselect")}}),s=null,o=0,r=(u=this.__features).length;o<r;o++)t=u[o],l=null,(n=(i=this.__getFeatureType(t))&&this.__isFeatureTypeAllowed(i))||(l=i?"Feature type '"+i+"' not allowed. Only "+("full"===this.allowed_feature_types?"all types":CUI.util.isArray(this.allowed_feature_types)?this.allowed_feature_types.join(", "):this.allowed_feature_types)+" permitted.":"Unknown or invalid feature type"),this.single_feature&&0<this.__features.indexOf(t)&&(n=!1,l="Only one feature allowed in this editor. This feature will be removed when you add a new one."),i=new GeoJsonFeatureItem({feature:t,is_valid:n,validation_message:l}),this.featuresTree.addNode(i),e&&t===e&&(s=i);a=[],this.__isFeatureTypeAllowed("points")&&a.push({text:"Add Point (Draw In Map)",onClick:(c=this,function(e){return c.__enableDrawMode("point",c.__addButton)})}),this.__isFeatureTypeAllowed("polygons")&&a.push({text:"Add Polygon (Draw In Map)",onClick:(p=this,function(e){return p.__enableDrawMode("polygon",p.__addButton)})}),this.__isFeatureTypeAllowed("lines")&&a.push({text:"Add Line (Draw In Map)",onClick:(d=this,function(e){return d.__enableDrawMode("line",d.__addButton)})}),0<a.length&&(!this.single_feature||0===this.__features.length)&&(this.__addButton=new LocaButton({loca_key:"map.editor.list.edit.button.add",ui:"map-editor.add.button",group:"one",menu:{items:a}})),this.__removeButton=new LocaButton({loca_key:"map.editor.list.button.remove",ui:"map-editor.remove.button",group:"one",onClick:(h=this,function(e){return h.__removeSelectedFeature()})}),a=[],this.__addButton&&a.push(this.__addButton),a.push(this.__removeButton),this.__feature_buttons=new CUI.Buttonbar({buttons:a,size:"big"}),a=new CUI.SimplePane({class:"cui-pane--window",title:"Locations",footer_left:this.__feature_buttons,content:(f=this,function(){return f.featuresTree.render()})}),this.featuresList.append(a),this.featuresTree.root.open(),s&&s.select()}},s.prototype.__getFeaturesFromData=function(){var e;return(null!=(e=this.data)?e.features:void 0)||[]},s.prototype.__getGeoJsonFromFeatures=function(e){return{type:"FeatureCollection",features:e=null==e?this.__features:e}},s.prototype.__addFeatureToList=function(e){this.single_feature&&0<this.__features.length&&(this.__features=[],this.basic_mode||this.featuresTree.empty()),this.basic_mode||(e=new GeoJsonFeatureItem({feature:e}),this.featuresTree.addNode(e),e.select())},s.prototype.__onMapReady=function(){var e,t;if(this.__map.addDataToSource(s.MAP_SOURCE_NAME,this.data),0<this.__features.length)return e=3,(1<this.__features.length||1===this.__features.length&&"Point"!==(null!=(t=((null!=(t=this.__features.features)?t[0]:void 0)||this.__features[0]).geometry)?t.type:void 0))&&(e=16),this.__map.fitData(null,null,!1,e)},s.prototype.__onMapClick=function(e,t){},s.prototype.__removeSelectedFeature=function(){var e;this.selectedFeature&&-1!==(e=CUI.util.idxInArray(this.selectedFeature,this.__features,function(e,t){return e===t}))&&(this.__features.splice(e,1),this.__map.addDataToSource(s.MAP_SOURCE_NAME,{type:"FeatureCollection",features:this.__features}),this.__renderFeaturesList())},s.prototype.__enableDrawMode=function(e,t){var o;if(null!=(o=this.__activeToolBtn)&&o.deactivate(),CUI.util.isEmpty(this.__drawMode)||(o=this.__drawMode,this.__disableDrawMode(this.__drawMode),o!==e))switch(this.__drawMode=e,this.__activeToolBtn=t,this.__activeToolBtn.activate(),e){case"point":this.__enableDrawPointMode();break;case"polygon":this.__enableDrawPolygonMode();break;case"line":this.__enableDrawLineMode();break;case"geocoder":this.__enableGeocoderMode();break;default:throw new Error("Invalid draw mode: "+e)}},s.prototype.__disableDrawMode=function(e){switch(e){case"point":this.__disableDrawPointMode();break;case"polygon":this.__disableDrawPolygonMode();break;case"line":this.__disableDrawLineMode();break;case"geocoder":this.__disableGeocoderMode();break;default:throw new Error("Invalid draw mode: "+e)}this.__drawMode=null},s.prototype.__enableDrawPointMode=function(){var e,t;console.log("Enable draw point mode"),this.__showMapContextButtonBar("Click on the map to add a point",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawPointToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"Point"}),this.__drawInteraction.on("drawend",(t=this,function(e){e=e.feature,e=(new ol.format.GeoJSON).writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"});return t.single_feature&&(t.__features=[]),t.__features.push(e),t.__updateFeaturesOnMap(),t.__renderFeaturesList(e)})),this.__map.__map.addInteraction(this.__drawInteraction)},s.prototype.__disableDrawPointMode=function(){console.log("Disable draw point mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__enableDrawPolygonMode=function(){var e,o,t;console.log("Enable draw polygon mode"),this.__showMapContextButtonBar("Click on the map to add points for the area. Press Enter to finish - Use shift for free draw.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawPolygonToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"Polygon"}),this.__drawInteraction.on("drawend",(o=this,function(e){var e=e.feature,t=(new ol.format.GeoJSON).writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"});return o.single_feature&&(o.__features=[]),o.__features.push(t),o.__updateFeaturesOnMap(),o.__renderFeaturesList(t),o.__drawInteraction&&(o.__map.__map.removeInteraction(o.__drawInteraction),o.__drawInteraction=null),window.removeEventListener("keyup",o.__drawKeyUpHandler),o.__drawKeyUpHandler=null,o.__enableSingleFeatureModify(e)})),this.__map.__map.addInteraction(this.__drawInteraction),this.__drawKeyUpHandler=(t=this,function(e){if("Enter"===e.key&&null!=t.__drawInteraction&&"polygon"===t.__drawMode)return t.__drawInteraction.finishDrawing()}),window.addEventListener("keyup",this.__drawKeyUpHandler)},s.prototype.__disableDrawPolygonMode=function(){console.log("Disable draw polygon mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),window.removeEventListener("keyup",this.__drawKeyUpHandler),this.__drawKeyUpHandler=null,this.__disableSingleFeatureModify(),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__enableSingleFeatureModify=function(t){var e,o,n;console.log("Enable single-feature modify mode"),this.__hideMapContextButtonBar(),this.__showMapContextButtonBar("Drag the vertices to modify the area. Press Enter to finish.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(o=this,function(){return o.__drawPolygonToolboxTool.run()})})),e=new ol.Collection([t]),this.__modifyInteraction=new ol.interaction.Modify({features:e}),this.__modifyInteraction.on("modifyend",(n=this,function(e){if(0<e.features.getArray().length)return e=(new ol.format.GeoJSON).writeFeatureObject(t,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"}),n.__features[n.__features.length-1].geometry=e.geometry,n.__updateFeaturesOnMap()})),this.__map.__map.addInteraction(this.__modifyInteraction)},s.prototype.__disableSingleFeatureModify=function(){console.log("Disable single-feature modify mode"),this.__hideMapContextButtonBar(),this.__modifyInteraction&&(this.__map.__map.removeInteraction(this.__modifyInteraction),this.__modifyInteraction=null)},s.prototype.__enableDrawLineMode=function(){var e,o,t;console.log("Enable draw line mode"),this.__showMapContextButtonBar("Click on the map to add points for the line. Press Enter to finish.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawLineToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"LineString"}),this.__drawInteraction.on("drawend",(o=this,function(e){var t,e=e.feature;if(!(e.getGeometry().getCoordinates().length<2))return t=(new ol.format.GeoJSON).writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"}),o.single_feature&&(o.__features=[]),o.__features.push(t),o.__updateFeaturesOnMap(),o.__renderFeaturesList(t);o.__map.getSource(s.MAP_EDITOR_SOURCE_NAME).removeFeature(e),console.log("Line must have at least 2 points")})),this.__map.__map.addInteraction(this.__drawInteraction),this.__drawKeyUpHandler=(t=this,function(e){if("Enter"===e.key&&null!=t.__drawInteraction&&"line"===t.__drawMode)return t.__drawInteraction.finishDrawing()}),window.addEventListener("keyup",this.__drawKeyUpHandler)},s.prototype.__disableDrawLineMode=function(){console.log("Disable draw line mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),window.removeEventListener("keyup",this.__drawKeyUpHandler),this.__drawKeyUpHandler=null,this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__drawLineOnClick=function(e){var t,o,n,r,a,i,e=this.__map.getMapCoordsFromEvent(e);if(this.__lineDrawn){for(this.__lineCoords.push([e.lng,e.lat]),a=GeoJsonColumn.createLineFeature(this.__lineCoords),2<this.__lineCoords.length&&this.__features.pop(),this.__features.push(a),this.__updateFeaturesOnMap(),this.__renderFeaturesList(a),r=[],o=0,n=(i=this.__lineCoords).length;o<n;o++)t=i[o],r.push(GeoJsonColumn.createPointFeature(t[0],t[1]));r.push(GeoJsonColumn.createLineFeature(this.__lineCoords)),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures(r))}else this.__lineDrawn=!0,this.__lineCoords=[],this.__lineCoords.push([e.lng,e.lat])},s.prototype.__enableGeocoderMode=function(){var n,e,r=function(){o.destroy(),t.destroy()},t=new MapSearchSelector({data:this.data,name:"map_search_selector",placeholder:"Search to add a location",onFeatureSelected:(n=this,function(e){var t,o;n.__map.fitData(e),n.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[e]}),o=new CUI.Button({text:"Confirm",icon:"fa-check",size:"mini",onClick:function(){return n.__confirmGeocoderFeature(e)}}),t=new CUI.Button({text:"Cancel",icon:"fa-times",size:"mini",onClick:function(){return n.__cancelGeocoderFeature()}}),n.__showMapContextButtonBar("Add this location?",[o,t]),r()})}),o=new CUI.Modal({onShow:function(){return t.focus()},pane:{padded:!0,header_left:new CUI.Label({text:"Add a location"}),content:[t.start()],footer_right:[{text:CUI.Button.defaults.confirm_cancel,onClick:(e=this,function(){return e.__disableGeocoderMode(),r()})}]}});return o.show()},s.prototype.__disableGeocoderMode=function(){},s.prototype.__confirmGeocoderFeature=function(e){console.log("Feature confirmed:",e),this.__geoCoderToolboxTool.run(),this.single_feature&&(this.__features=[]),this.__features.push(e),this.__updateFeaturesOnMap(),this.__renderFeaturesList(e),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[]}),this.__hideMapContextButtonBar(),this.__disableGeocoderMode()},s.prototype.__cancelGeocoderFeature=function(){console.log("Feature addition canceled"),this.__geocoderToolboxTool.run(),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[]}),this.__hideMapContextButtonBar(),this.__disableGeocoderMode()},s.prototype.__updateFeaturesOnMap=function(){this.__map.addDataToSource(s.MAP_SOURCE_NAME,{type:"FeatureCollection",features:this.__features})},s})(CUI.Element),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonDetailMap=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.getButtonLocaKey=function(){return"map.detail.plugin.button"},t.prototype.prefName=function(){return"detail_sidebar_show_map"},t.prototype.isAvailable=function(){var o,e;return!(null==(e=this._detailSidebar)||null==(e=e.object)||!e.getGeoStandard())||!!(e=null!=(e=this._detailSidebar)&&null!=(e=e.object)?e.mask:void 0)&&(o=!1,e.invokeOnFields("detail",!0,function(e,t){if(e instanceof GeoJsonColumn)return o=!0},this._detailSidebar.object.data[e.table.name()]),o)},t.getConfig=function(){return ez5.session.getBaseConfig("plugin","geo-json")},t.prototype.isDisabled=function(){var o,e=this._detailSidebar.object.getGeoStandard();return!(!CUI.util.isEmpty(e)||(e=null!=(e=this._detailSidebar)&&null!=(e=e.object)?e.mask:void 0)&&(o=!1,e.invokeOnFields("detail",!0,function(e,t){if(e instanceof GeoJsonColumn&&e.isVisible("detail")&&!CUI.util.isEmpty(null!=t?t[e.name()]:void 0))return o=!0},this._detailSidebar.object.data[e.table.name()]),o))},t.prototype.renderObject=function(){return t.__super__.renderObject.call(this)},t.prototype.showDetail=function(){return t.__super__.showDetail.call(this),this.__map&&this.resetMap(),this.__buildMap(),t.__super__.showDetail.call(this)},t.prototype.__buildMap=function(e,t){var o,n,r,a;return null==t&&(t=null),o={clickable:!1,cluster:!1,onClick:function(e,t){return r.__onMapClick(e,t)},onReady:(n=r=this,function(){n.__onMapReady()}),drawFeatures:["LineString","Polygon","MultiPolygon"]},GeoJsonMap.load(o).done((a=this,function(e){return a.__map=e,a._detailSidebar.mainPane.replace(a.__map,"top"),CUI.scheduleCallback({ms:1,call:function(){return"function"==typeof t?t():void 0}})}))},t.prototype.resetMap=function(){var e;null!=(e=this.__map)&&e.destroy(),delete this.__map,delete this.__isMapReady,CUI.Events.ignore({instance:this})},t.prototype.destroy=function(){return this.resetMap(),t.__super__.destroy.call(this)},t.prototype.__onMapReady=function(){var e,t;return this.__map.resize(!0),t=this._detailSidebar.object,t=this.__collectGeoData(t),t=GeoJsonMap.flattenArrayOfFeatures(t),this.__renderAssets(t),this.__renderPoints(t),this.__map.addDataToSource(MapEditor.MAP_SOURCE_NAME,t),e=3,(1<t.features.length||1===t.features.length&&"Point"!==(null!=(t=t.features[0].geometry)?t.type:void 0))&&(e=16),this.__map.fitData(null,null,!1,e)},t.prototype.__onMapClick=function(e,t){},t.prototype.__collectGeoData=function(e){for(var t,o,l,n,r,a,i,_,s,u,c,p,d,h,f,m,g=[],y=e.getAssetsForBrowser("detail"),C=0,w=y.length;C<w;C++)t=y[C],!this.__isAssetEnabledByCustomSetting(t)||CUI.util.isEmpty(t.value.versions)||(f=null!=(f=t.value.technical_metadata)?f.gps_location:void 0)&&f.latitude&&f.longitude&&t.value.versions.small&&0<t.value.versions.small.width&&0<t.value.versions.small.height&&(f={type:"Feature",geometry:{type:"Point",coordinates:[f.longitude,f.latitude]},properties:{asset:t}},this.__addFieldInfoToFeature(f,t.getField(),"asset"),g.push(f));for(_=[],l=[],e.mask.invokeOnFields("detail",!0,function(e,t){var o,n,r,a,i,s,u;if(t&&e instanceof GeoJsonColumn){if(CUI.util.isArray(t)){for(s=[],n=0,a=t.length;n<a;n++)o=t[n],CUI.util.isEmpty(o)?s.push(void 0):s.push(_.push({field:e,data:o[e.name()]||[]}));return s}return _.push({field:e,data:(null!=t?t[e.name()]:void 0)||[]})}if(e instanceof CustomDataType&&"function"==typeof e.supportsGeoStandard&&e.supportsGeoStandard()){if(CUI.util.isArray(t)){for(u=[],r=0,i=t.length;r<i;r++)o=t[r],CUI.util.isEmpty(o)?u.push(void 0):u.push(l.push({field:e,data:o[e.name()]||[]}));return u}return l.push({field:e,data:(null!=t?t[e.name()]:void 0)||[]})}},e.data[e.mask.table.name()]),s=0,p=_.length;s<p;s++)i=_[s],CUI.util.isEmpty(i.data)||(n=i.data,this.__addFieldInfoToGeoData(n,i.field,"geo_field"),g.push(n));for(u=0,d=l.length;u<d;u++)if(o=l[u],!CUI.util.isEmpty(null!=(m=o.data)&&null!=(m=m._standard)?m.geo:void 0))if(r=o.data._standard.geo,CUI.util.isArray(r)){for(c=0,h=r.length;c<h;c++)a=r[c],this.__addFieldInfoToGeoData(a,o.field,"custom_geo_field");g=g.concat(r)}else this.__addFieldInfoToGeoData(r,o.field,"custom_geo_field"),g.push(r);return g},t.prototype.__renderPoints=function(e){var r;turf.featureEach(e,(r=this,function(e){var t,o,n=e.geometry;if("Point"===(null!=n?n.type:void 0)&&(n=n.coordinates,CUI.util.isArray(n))&&2<=n.length)return o=CUI.dom.div("map-marker-pin size-mini"),t=new CUI.Icon({class:"custom-icon",icon:"fa-map-marker"}),o.insertAdjacentHTML("afterbegin",'<svg viewBox="0 0 16.32177 20.187037"><path fill="#000000" d="m 8.1359244,0.1192069 c -4.41828,0 -8,4.00258 -8,8.5 0,4.4622001 2.55332,9.3124001 6.5371,11.1744001 0.9286,0.4341 1.9972,0.4341 2.9258,0 3.9837996,-1.862 6.5370996,-6.7122 6.5370996,-11.1744001 0,-4.49742 -3.5817,-8.5 -7.9999996,-8.5 z"/></svg>'),o.appendChild(t.DOM),r.__addTooltipToMarker(o,e),r.__map.addMarker({feature:e,coordinates:n,html:o,anchor:"bottom-center"})}))},t.prototype.__renderAssets=function(e){var n;turf.featureEach(e,(n=this,function(e){var t,o=e.properties;if(null!=o&&o.asset)return o=o.asset.getImgElement(null,"small"),t=CUI.dom.div("map-marker-image"),t=CUI.dom.append(t,o),n.__addTooltipToMarker(t,e),o={feature:e,coordinates:e.geometry.coordinates,html:t},n.__map.addMarker(o)}))},t.prototype.__addFieldInfoToFeature=function(e,t,o){e.properties||(e.properties={}),e.properties.field_name=t.fullNameLocalized(),e.properties.field_type=o},t.prototype.__addFieldInfoToGeoData=function(e,t,o){var n,r,a,i;if("FeatureCollection"===e.type)for(r=0,a=(i=e.features).length;r<a;r++)n=i[r],this.__addFieldInfoToFeature(n,t,o);else"Feature"===e.type&&this.__addFieldInfoToFeature(e,t,o)},t.prototype.__addTooltipToMarker=function(e,t){t=t.properties;null!=t&&t.field_name&&new CUI.Tooltip({element:e,text:t.field_name,show_ms:20,on_hover:!0,placement:"n"})},t.prototype.__isAssetEnabledByCustomSetting=function(e){e=null!=(e=e.getField().FieldSchema)&&null!=(e=e.custom_settings)?e.show_in_map:void 0;return CUI.util.isNull(e)||e},t})(DetailSidebarPlugin);ez5.session_ready(function(){if(GeoJsonMap.getMapClass().canLoad())return DetailSidebar.plugins.registerPlugin(GeoJsonDetailMap)});var extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapFormPopover=(e=>{function t(e){e.fields=this._getFields(),t.__super__.constructor.call(this,e)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this)},t.prototype._getFields=function(){var w;return[{type:CUI.DataFieldProxy,call_others:!1,name:"search_map",element:(w=this,function(e){var i,t,o,n,r,a,s,u,l,_,c,p,d,h,f,m,g,y=function(){return CUI.Events.trigger({node:e,type:"data-changed"})},C=e.getData()||{};return CUI.util.isEmpty(C.feature)&&(C.feature={type:"FeatureCollection",features:[]},C.type="polygon_search"),f=h=c=s=l=i=null,m=function(){for(var e,t=new ol.format.GeoJSON,o=i.getSource().getFeatures(),t=t.writeFeaturesObject(o,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"}),n=t.features,r=0,a=n.length;r<a;r++)(e=n[r]).properties={bbox:turf.bbox(e)};return Object.assign(C.feature,t),y()},o=function(){return a.setActive(!0),u.setActive(!1),h.getFeatures().clear(),f.hide(),i.__map.removeInteraction(c),i.__map.removeInteraction(h),i.__map.removeInteraction(s),i.__map.addInteraction(l)},r=function(){return a.setActive(!1),i.__map.removeInteraction(l),i.__map.addInteraction(c),setTimeout(function(){return i.__map.addInteraction(h),h.getFeatures().clear(),f.hide()},500)},t=function(){return u.setActive(!0),a.setActive(!1),h.getFeatures().clear(),f.hide(),i.__map.removeInteraction(c),i.__map.removeInteraction(h),i.__map.removeInteraction(l),i.__map.addInteraction(s)},n=function(){return u.setActive(!1),i.__map.removeInteraction(s),i.__map.addInteraction(c),setTimeout(function(){return i.__map.addInteraction(h),h.getFeatures().clear(),f.hide()},500)},a=new CUI.Button({text:"Draw Area",icon:"fa-pencil-square-o",onClick:function(){return(a.isActive()?r:o)()}}),u=new CUI.Button({text:"Draw Circle",icon:"fa-circle-o",onClick:function(){return(u.isActive()?n:t)()}}),_=new CUI.Button({text:"Geocoder",icon:"fa-search",onClick:function(){return w.showGeocoderPopover(i,function(e){return i.addDataToSource("fylr-default",e),m()})}}),d={},p=new CUI.Button({text:"Point & Radius",icon:"fa-dot-circle-o",onClick:function(){var e=new CUI.Form({data:d,fields:[{type:CUI.Input,name:"long_lat",placeholder:"e.g. -73.935242, 40.730610",form:{label:"Lon/Lat"}},{type:CUI.NumberInput,name:"radius",placeholder:"e.g. 1000",form:{label:"Radius"}},{type:CUI.Select,name:"unit",form:{label:"Unit"},options:[{value:"meters",text:"Meters"},{value:"kilometers",text:"Kilometers"},{value:"miles",text:"Miles"},{value:"feet",text:"Feet"},{value:"nauticalmiles",text:"Nautical Miles"}]}]}),t=new CUI.Button({text:"Apply",icon:"fa-check",onClick:function(){var e,t;return null!=d.long_lat&&null!=d.radius&&(e=GeoJsonColumn.extractCoordinates(d.long_lat),t=parseFloat(d.radius),d.unit,e)&&(e=turf.circle([e.geometry.coordinates[0],e.geometry.coordinates[1]],t,{steps:64,units:d.unit||"kilometers"}),i.addDataToSource("fylr-default",e,!0),d={},m()),o.hide()}}),o=new CUI.Popover({element:p,pane:{content:[e.start(),t]}});return o.show()}}),g=new CUI.VerticalLayout({maximize_horizontal:!0,class:"map-form-popover-vl",top:{content:[a,u,_,p]},bottom:{content:[new CUI.Label({text:"Draw a rectangle or circle in the map to search for items in that area."})]}}),GeoJsonMap.load({clickable:!1,zoomToFitAllMarkersOnInit:!0,cluster:!1,searchInput:!1}).done(function(e){var t;i=e,(l=new ol.interaction.Draw({source:i.getSource(),type:"Circle",geometryFunction:ol.interaction.Draw.createBox()})).on("drawend",r),(s=new ol.interaction.Draw({source:i.getSource(),type:"Circle"})).on("drawend",function(e){var e=e.feature,t=e.getGeometry(),t=ol.geom.Polygon.fromCircle(t,16);return e.setGeometry(t),n()}),c=new ol.interaction.Modify({source:i.getSource()}),h=new ol.interaction.Select,i.__map.addInteraction(h),h.on("select",function(e){return 0<e.selected.length?f.show():f.hide()}),i.getSource().on("addfeature",m),i.getSource().on("removefeature",m),e=[],t=new CUI.Label({text:"Selected Area"}),e.push(t),e.push(new CUI.Button({icon:"trash",size:"mini",onClick:function(){var e,t=h.getFeatures();if(0<t.getLength())return e=t.item(0),i.getSource().removeFeature(e),t.clear(),f.hide(),y()}})),f=new CUI.Buttonbar({class:"ez5-selected-objects-badge",buttons:e}),i.resize(),CUI.dom.append(i.__mapTemplate.get("buttons-bottom-center"),f),f.hide(),g.replace(i,"center"),i.addDataToSource("fylr-default",C.feature,!0)}),g})}]},t.prototype.showGeocoderPopover=function(t,o){var n=function(){r.destroy(),e.destroy()},e=new MapSearchSelector({data:{},name:"map_search_selector",placeholder:"Search to add a location",onFeatureSelected:function(e){t.fitData(e),o(e),n()}}),r=new CUI.Modal({onShow:function(){return e.focus()},pane:{padded:!0,header_left:new CUI.Label({text:"Add a location"}),content:[e.start()],footer_right:[{text:CUI.Button.defaults.confirm_cancel,onClick:function(){return n()}}]}});return r.show()},t})(CUI.FormPopover),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,SimpleMapEditor=(()=>{function o(){return o.__super__.constructor.apply(this,arguments)}return extend(o,MapFormPopover),o.MAP_SOURCE_NAME="fylr-default",o.prototype.initOpts=function(){return o.__super__.initOpts.call(this),this.addOpts({field:{mandatory:!0,check:Field},data:{check:"PlainObject"},done:{default:function(){},check:Function}})},o.prototype.readOpts=function(){return o.__super__.readOpts.call(this),CUI.util.isEmpty(this._data)&&(this._data=GeoJsonColumn.emptyFeatureCollection()),this.data=this._data||GeoJsonColumn.emptyFeatureCollection(),this.field=this._field,this.__done=this._done},o.prototype._getFields=function(){var l;return[{type:CUI.DataFieldProxy,call_others:!1,name:"search_map",element:(l=this,function(e){var o,t,n,r,a,i,s=function(){return CUI.Events.trigger({node:e,type:"data-changed"})},u=e.getData()||{};return CUI.util.isEmpty(u)&&(u={type:"FeatureCollection",features:[]}),o=null,a=function(){var e=new ol.format.GeoJSON,t=o.getSource().getFeatures(),e=e.writeFeaturesObject(t,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"});return Object.assign(u,e),0<t.length&&"Point"===t[0].getGeometry().getType()&&(e=ol.proj.toLonLat(t[0].getGeometry().getCoordinates()),l.latInput.setValue(e[1]),l.lngInput.setValue(e[0])),s()},l.__coordData={lat:0,lng:0},l.latInput=new CUI.NumberInput({name:"lat",data:l.__coordData,placeholder:"Latitude",decimals:15,onDataChanged:function(){return t()}}),l.lngInput=new CUI.NumberInput({name:"lng",data:l.__coordData,placeholder:"Longitude",decimals:15,onDataChanged:function(){return t()}}),t=function(){var e,t;if(o&&(e=parseFloat(l.__coordData.lat),t=parseFloat(l.__coordData.lng),!(isNaN(e)||isNaN(t)||e<-90||90<e||t<-180||180<t)))return o.getSource().clear(),t=GeoJsonColumn.createPointFeature(t,e),o.addDataToSource("fylr-default",t),a()},n=new CUI.HorizontalLayout({left:{content:new CUI.Label({text:"Lat:"}),class:"coord-input-label"},center:{content:l.latInput.start()}}),r=new CUI.HorizontalLayout({left:{content:new CUI.Label({text:"Lng:"}),class:"coord-input-label"},center:{content:l.lngInput.start()}}),i=new CUI.VerticalLayout({maximize_horizontal:!0,class:"map-form-popover-vl",top:{content:[]},center:{content:o},bottom:{content:[n,r]}}),GeoJsonMap.load({clickable:!1,cluster:!1,zoomToFitAllMarkersOnInit:!0,onClick:function(e,t,o,n){return t.getSource().clear(),n=GeoJsonColumn.createPointFeature(n.lng,n.lat),t.addDataToSource("fylr-default",n),a()},onReady:function(){if(!CUI.util.isEmpty(u))return o.addDataToSource("fylr-default",u)}}).done(function(e){(o=e).resize(),i.replace(o,"center"),CUI.util.isEmpty(l.data)||o.addDataToSource("fylr-default",l.data)}),i})}]},o.prototype.getPopoverOpts=function(){var t,e=o.__super__.getPopoverOpts.call(this);return e.title=$$("geoJsonColumn.simple-map-editor.title"),e.pane.class="ez5-simple-map-editor",e.pane.footer_right=new CUI.Button({text:$$("base.done"),primary:!0,onClick:(t=this,function(){var e=t._data;return t.__done(e),t.__closePopover()})}),e},o})(),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapSearchSelector=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this),this.addOpts({onFeatureSelected:{check:Function},placeholder:{check:String}})},t.prototype.__getDisplayText=function(){return this.__getInputPlaceholder()},t.prototype.__search=function(){var t,e=this.__input.value,e=new CUI.XHR({url:"https://nominatim.openstreetmap.org/search?format=geojson&polygon_geojson=1&limit=5&q="+e}).start();return e.done((t=this,function(e){return t.__show(e)})),e},t.prototype.render=function(){var e;if(!this.__isRendered)return t.__super__.render.call(this),this.__autocompletion.addContainer("all"),this.__searchButton=new CUI.Button({appearance:"normal",icon:"fa-search",onClick:(e=this,function(){e.__search()})}),CUI.dom.replace(this.__button,this.__searchButton)},t.prototype.__getInputPlaceholder=function(){return this._placeholder},t.prototype.__getButtonLocaKey=function(){return"pool.field.input.search.button.open_search"},t.prototype.__show=function(e){var t,o,n,r,a;if(this.__autocompletion.emptyContainer(),"FeatureCollection"===e.type){for(r=this,t=function(e){var t=r.__autocompletion.appendItem("all",new CUI.VerticalList({content:[e.properties.display_name]}));return CUI.Events.listen({type:"click",node:t,call:function(){"function"==typeof r._onFeatureSelected&&r._onFeatureSelected(e),r.__autocompletion.hide()}})},o=0,n=(a=e.features).length;o<n;o++)t(a[o]);this.__autocompletion.show()}},t})(SearchSelector),extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonSchemaPlugin=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.getCustomSettings=function(e){var t;return"geo_json"===(null!=e&&null!=(t=e.column)?t.type:void 0)&&ez5.session.getCapability("geo_support")?(e.custom_settings["geo-json"]||(e.custom_settings["geo-json"]={}),null==(t=e.custom_settings["geo-json"]).allow_points_feature&&(t.allow_points_feature=!0),null==t.allow_lines_feature&&(t.allow_lines_feature=!0),null==t.allow_polygons_feature&&(t.allow_polygons_feature=!0),null==t.allow_geocoder&&(t.allow_geocoder=!0),null==t.allow_multiple_features&&(t.allow_multiple_features=!0),[{type:CUI.Checkbox,name:"allow_multiple_features",data:t,form:{label:"Support Feature Collections"}},{type:CUI.Checkbox,name:"allow_points_feature",data:t,form:{label:"Support Points"}},{type:CUI.Checkbox,name:"allow_lines_feature",data:t,form:{label:"Support Lines"}},{type:CUI.Checkbox,name:"allow_polygons_feature",data:t,form:{label:"Support Polygons"}},{type:CUI.Checkbox,name:"allow_geocoder",data:t,form:{label:"Support Geocoder"}}]):[]},t.prototype.getCustomSettingsLabel=function(e){if("geo_json"===(null!=e&&null!=(e=e.column)?e.type:void 0)&&ez5.session.getCapability("geo_support"))return"GeoJson Editor Settings"},t.prototype.getCustomSettingsDisplay=function(e){return[]},t.prototype.getName=function(){return"geo-json"},t})(SchemaPlugin);Schema.registerPlugin(new GeoJsonSchemaPlugin);