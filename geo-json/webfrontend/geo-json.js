var ResultMap,bind=function(e,t){return function(){return e.apply(t,arguments)}},extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,ResultMap=(e=>{function T(){return this.__getMarkerBySignature=bind(this.__getMarkerBySignature,this),T.__super__.constructor.apply(this,arguments)}return extend(T,e),T.BUCKET_MAX_OBJECTS=30,T.MAX_CONCURRENT_BUCKETS_REQUESTS=10,T.BUCKETS_PER_REQUEST=500,T.source="fylr-result-map",T.prototype.initOpts=function(){return T.__super__.initOpts.call(this),this.settings=this.getDefaultSettings()},T.prototype.init=function(){var t,o,n;return T.__super__.init.call(this),t=new CUI.Deferred,this.__pane=new CUI.Pane({class:"ez5-result-table-pane-v2",absolute:this._pane_absolute}),this.__loadingPromise=this.__getMapContainer(),this.__loadingPromise.done((o=this,function(e){return CUI.dom.append(o.__pane.center(),e),CUI.dom.replace(o.getResultContainer(),o.__pane),o.afterInit(),t.resolve()})),CUI.Events.listen({node:this.result_container,type:"toolbox",call:(n=this,function(e,t){return t.tools.push.apply(t.tools,n.getTools()),e.stopPropagation()})}),this.__fitNeeded=!0,t.promise()},T.prototype.afterInit=function(){var e;return"function"==typeof(e=this.getSearch()).disableMapManager?e.disableMapManager():void 0},T.prototype.addGeoBoundingBoxQueryElement=function(){var e,e,e=this.__getRequestMapBounds(),e=new QueryElementGeoBoundingBox({boundingBox:e});return this.getSearch().showInSearch(e)},T.prototype.getTools=function(){var e,t,e=[];return this.__map&&e.push(new ToolboxTool({name:"map.capture.bound",group:"map",run:(t=this,function(e){return t.addGeoBoundingBoxQueryElement()})})),e},T.prototype.getName=function(){return"map"},T.prototype.setSearch=function(e){return this._search=e,T.__super__.setSearch.call(this,this._search),this},T.prototype.unsetSearch=function(){var e;return"function"==typeof(e=this.getSearch()).enableMapManager&&e.enableMapManager(),T.__super__.unsetSearch.call(this),this},T.prototype.updateView=function(e){return T.__super__.updateView.call(this,e)},T.prototype.__getMapOpts=function(){var e,t,o,n,r,a,e={defaultSource:T.source,clickable:!1,zoomToFitAllMarkersOnInit:!0,onMoveEnd:T.debounce(this.__onMapMoveEnd.bind(this),250),renderPopup:(a=this,function(e){return a.__renderPopup(e)}),onRender:(r=this,function(e,t){return r.__onRenderFeatures(e,t)}),onClick:(n=this,function(e,t){return n.__onMapClick(e,t)}),onReady:(o=this,function(e){return o.__onMapReady(e)}),styleFunction:(t=this,function(e){return t.__styleFunction(e)})};return e},T.prototype.__styleFunction=function(e){},T.prototype.__onMapReady=function(e){return this.__map||(this.__map=e),this.__map.resize(!0)},T.prototype.__getMapContainer=function(){var t,e,o;return this.__map?CUI.resolvedPromise(this.__map):(t=new CUI.Deferred,GeoJsonMap.load(this.__getMapOpts()).done((o=this,function(e){return o.__map=e,t.resolve(o.__map)})).fail((e=this,function(){return t.reject()})),t)},T.prototype.__onMapClick=function(e,t){var t;return;t=t.queryRenderedFeatures(e.point,{layers:["points","polygons","lines"]}),CUI.util.isEmpty(t)},T.prototype.showResult=function(e,t){var o,n,r,a,i,s,l,u,_,c,p,d,h,f,f,f,m,g,y,C,b,v,w;if(e.__map_executed||e.offset&&0!==e.offset||(this.__fitNeeded=!0),null==(f=this.__map)||!f.__mapNotLoadedSchedule((I=this,function(){return I.showResult(e,t)}))){var I,i=(null!=(f=t.aggregations)&&null!=(f=f.hashes)?f.buckets:void 0)||[],S,M,F;if(0===i.length)this.__map.addDataToSource(T.source,{type:"FeatureCollection",features:[]});else{for(C=[],a=[],l=0,c=i.length;l<c;l++)r=i[l],r.doc_count>T.BUCKET_MAX_OBJECTS?a.push(r):0<r.doc_count&&C.push(r);if(0<C.length){for(v=CUI.util.copyObject(e,!0),m=v.search,u=0,p=m.length;u<p;u++)y=m[u],null!=y&&y.geo_bounding_box&&v.search.splice(v.search.indexOf(y),1);for(n=[],o=this.__getRequestMapBounds(),s=function(e){return e.geo_center.lon>=o.top_left.lon&&e.geo_center.lon<=o.bottom_right.lon&&e.geo_center.lat>=o.bottom_right.lat&&e.geo_center.lat<=o.top_left.lat},g=0,_=0,d=C.length;_<d;_++)r=C[_],s(r)?n.push({type:"geo_bounding_box",field:"_standard.geo.1",bool:"should",geo_bounding_box:{top_left:r.key,bottom_right:r.key}}):g++;h={type:"geo_bounding_box",field:"_standard.geo.1",bool:"must",geo_bounding_box:o},b=[],w=function(e,t){for(var o,n,r,a,i,i=[],o=n=0,r=e.length,a=t;0<a?n<r:r<n;o=n+=a)i.push(e.slice(o,o+t));return i},console.debug("ResultMap.showResult: Zoom level:",this.__map.getZoom(),"Precision:",this.__map.getPrecision(),"Buckets returned:",i.length," Rejected buckets:",g),0===n.length&&n.push(h),CUI.chunkWork.call(this,{items:n,chunk_size:T.MAX_CONCURRENT_BUCKETS_REQUESTS*T.BUCKETS_PER_REQUEST,call:(F=this,function(e){var t,o,o=new CUI.Deferred,t=[];return w(e,T.BUCKETS_PER_REQUEST).forEach(function(e){var e;return e.push(h),y=CUI.util.copyObject(v.search,!0),y.push({type:"complex",search:e}),e=ez5.api.search({data:{debug:"ResultMapSmallClustersRequest"},json_data:{format:"standard",offset:0,limit:1e3,objecttypes:v.objecttypes,search:y}}).done(function(e){return b=b.concat(e.objects)}),t.push(e)}),CUI.whenAll(t).done(function(){return o.resolve()}),o.promise()})}).done((M=this,function(){var e,e=a.map(function(e){return{type:"Feature",geometry:{type:"Point",coordinates:[e.geo_center.lon,e.geo_center.lat]},properties:{doc_count:e.doc_count,obj_count:e.doc_count}}});if(e=M.__processResultObjects(b,e),e=e.filter(function(e){return"Point"===e.geometry.type}),1===t.count&&(M.__fitNeeded=!1),M.__map.addDataToSource(T.source,{type:"FeatureCollection",features:e},M.__fitNeeded),M.__fitNeeded)return M.__fitNeeded=!1})).fail((S=this,function(e){return console.error(e)}))}}}},T.prototype.__processResultObjects=function(e,t){var n,r,o,a,i,s,l,u,u,_,c,p,d,h;if(null==t&&(t=[]),this.__resultObjects=[],turf)for(o=0,i=e.length;o<i;o++)if(l=e[o],_=new ResultObject,_.setData(l),this.__resultObjects.push(_),p=_.getGeoStandard(),p&&0<p.length)for(r=0,a=0,s=p.length;a<s;a++)c=p[a],null!=c&&c.features||null==c||!c.coordinates||(c={type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Point",coordinates:c.coordinates},properties:{}}]}),"Feature"===(null!=c?c.type:void 0)&&"Point"===(null!=c&&null!=(u=c.geometry)?u.type:void 0)&&(c={type:"FeatureCollection",features:[c]}),0<(null!=c&&null!=(u=c.features)?u.length:void 0)&&(n=[],turf.featureEach(c,(h=this,function(e,t){var o,t;return null==e.properties&&(e.properties={}),n=[],"Point"!==e.geometry.type&&1<c.features.length&&n.push(t),"Point"!==e.geometry.type&&1===c.features.length&&(t=CUI.util.copyObject(e,!0),o=GeoJsonMap.getCenterCoordsForFeature(e),e.geometry.type="Point",e.geometry.coordinates=o,e.properties.original_feature=t.properties),e.properties.global_object_id=_.getGlobalObjectId(),e.properties.obj_count=1,e.properties.feature_index=r,r++})),n.forEach((d=this,function(e){return c.features.splice(e,1)})),t=t.concat(c.features));return t},T.prototype.addToRequest=function(e){var t,t,o,n;if(T.__super__.addToRequest.call(this,e),this.__map&&(t=this.__map.__map.getSize(),t)&&0!==t[0]&&0!==t[1])return e.limit=0,n=this.__map.getZoom(),t=this.__map.getPrecision(),o=this.__getRequestMapBounds(),e.aggregations||(e.aggregations={}),e.aggregations.bounds={type:"geo_bounds",field:"_standard.geo.1"},e.aggregations.hashes={type:"geohash_grid",field:"_standard.geo.1",precision:t},e.search.push({type:"geo_bounding_box",field:"_standard.geo.1",geo_bounding_box:o}),this},T.debounce=function(r,a,i){var s;return null==i&&(i=!1),s=null,function(){var e,t,o,n,o=this,e=arguments,n=function(){if(s=null,!i)return r.apply(o,e)},t=i&&!s;if(null!=s&&clearTimeout(s),s=setTimeout(n,a),t)return r.apply(o,e)}},T.prototype.__onMapMoveEnd=function(){var e,t,t=new Request;return t.__map_executed=!0,t.avoid_wait_block=!0,null!=(e=this.getSearch())?e.execute(t):void 0},T.prototype.__getRequestMapBounds=function(){var e,t,o,n,o,o=function(e){for(var t,t=e;t<-180;)t+=360;for(;180<t;)t-=360;return t},t=this.__map.getBounds(),o=360<Math.abs(t.getNorthWest().lng-t.getSouthEast().lng)?(e=-180,180):(e=o(t.getNorthWest().lng),o(t.getSouthEast().lng));return o<e&&(n=[o,e],e=n[0],o=n[1]),{top_left:{lat:t.getNorthWest().lat,lon:e},bottom_right:{lat:t.getSouthEast().lat,lon:o}}},T.prototype.__renderPopup=function(e){var t,o,n,r,a;if(0<(null!=(n=this.__resultObjects)?n.length:void 0))for(r=this.__resultObjects,t=0,o=r.length;t<o;t++)if(a=r[t],a.getGlobalObjectId()===this.__map.getFeatureProperties(e).global_object_id)return a.renderCardDetail();return null},T.prototype.__getMarkerBySignature=function(e,t){return e.find((o=this,function(e){return e.signature===t}))||null;var o},T.prototype.__onRenderFeatures=function(e,t){var o,n,r,a,i,s,l,u,_,c,p,d,h,f,m,g,y,C,b,v,w,I,S,M,F,U,k,k,P,E,a,r,a,O,I=[],n=[],x,j;for(null==this.__renderedMarkers&&(this.__renderedMarkers=[]),null==this.__renderedClusters&&(this.__renderedClusters=[]),_=function(e){return e[0]+"-"+e[1]},O=this,u=function(e){return O.__map.getFeatureProperties(e).global_object_id+"-"+O.__map.getFeatureProperties(e).feature_index},F=this.__renderedMarkers,p=0,f=F.length;p<f;p++)b=F[p],b.onScreen=!1;for(U=this.__renderedClusters,d=0,m=U.length;d<m;d++)o=U[d],o.onScreen=!1;for(h=0,g=t.length;h<g;h++)s=t[h],null!=(k=this.__map.getFeatureProperties(s))&&k.doc_count&&n.push(s),null!=(k=this.__map.getFeatureProperties(s))&&k.global_object_id&&!I.find((x=this,function(e){return u(e)===u(s)}))&&"Point"===this.__map.getFeatureType(s)&&I.push(s),!this.__map.isFeatureCluster(s)||n.find((t=>function(e){return t.__map.getClusterId(e)===t.__map.getClusterId(s)})(this))||n.push(s);for(v=0,y=n.length;v<y;v++)o=n[v],r=!1,a=null!==this.__map.getClusterId(o)?this.__renderedClusters.find((t=>function(e){return t.__map.getClusterId(e.feature)===t.__map.getClusterId(o)})(this))||null:(r=!0,this.__renderedClusters.find((t=>function(e){return _(t.__map.getFeatureCoordinates(e))===_(t.__map.getFeatureCoordinates(o))})(this))||null),a?a.onScreen=!0:(r?i=new CUI.Label({text:""+o.properties.doc_count}).DOM:(i=new CUI.Label({text:"..."}).DOM,(o=>function(e,t){return o.__map.updateClusterLabel(t,e)})(this)(i,o)),a=_(this.__map.getFeatureCoordinates(o)),r=new CUI.dom.div("result-map-cluster"),r.appendChild(i),CUI.dom.setAttribute(r,"marker-signature",a),a={signature:a,feature:o,coordinates:this.__map.getFeatureCoordinates(o),html:r,onScreen:!0},a.html.addEventListener("click",(t=>function(e){b=t.__getMarkerBySignature(t.__renderedClusters,e.currentTarget.getAttribute("marker-signature")),b&&t.__map.zoomToCluster(b.feature,T.source)})(this)),this.__map.addMarker(a),this.__renderedClusters.push(a));for(j=this,l=function(t){var e,o,n,r,a,o,i,a=j.__renderedMarkers.find(function(e){return u(e.feature)===u(t)})||null;if(a)return a.onScreen=!0;for(r=j.__resultObjects,i=[],n=0,e=r.length;n<e;n++){if(o=r[n],o.getGlobalObjectId()===j.__map.getFeatureProperties(t).global_object_id){o=j.renderObject(o,u(t)),b={signature:u(t),feature:t,coordinates:j.__map.getFeatureCoordinates(t),html:o,onScreen:!0,anchor:"bottom-center"},j.__map.addMarker(b),j.__renderedMarkers.push(b);break}i.push(void 0)}return i},w=0,C=I.length;w<C;w++)s=I[w],l(s);if(0<this.__renderedClusters.length)for(c=S=P=this.__renderedClusters.length-1;P<=0?S<=0:0<=S;c=P<=0?++S:--S)this.__renderedClusters[c].onScreen||(this.__map.removeMarker(this.__renderedClusters[c]),this.__renderedClusters.splice(c,1));if(0<this.__renderedMarkers.length)for(c=M=E=this.__renderedMarkers.length-1;E<=0?M<=0:0<=M;c=E<=0?++M:--M)this.__renderedMarkers[c].onScreen||(this.__map.removeMarker(this.__renderedMarkers[c]),this.__renderedMarkers.splice(c,1))},T.prototype.__onMarkerClicked=function(e){return this.getCollectionSelection().selectAndScrollByGlobalId(this.__map.getFeatureProperties(e.feature).global_object_id)},T.prototype.__getCustomColor=function(e){var t,o,t,e,e,e,e;return null==e||null==e.objecttype?null:(o=e.objecttype(),t=null!=(t=this.__customColors)?t[o]:void 0,t||(t=null!=(e=ez5.schema.CURRENT._table_by_name[e.objecttype()]._objecttype.objecttype)&&null!=(e=e.custom_data)&&null!=(e=e.webfrontend)&&null!=(e=e.geo_json)?e.marker_color:void 0,t?(null==this.__customColors&&(this.__customColors={}),this.__customColors[o]=t,t):null))},T.prototype.__getCustomIcon=function(e){var t,o,t,e,e,e,e;return null==e||null==e.objecttype?null:(o=e.objecttype(),t=null!=(t=this.__customIcons)?t[o]:void 0,t||(t=null!=(e=ez5.schema.CURRENT._table_by_name[e.objecttype()]._objecttype.objecttype)&&null!=(e=e.custom_data)&&null!=(e=e.webfrontend)&&null!=(e=e.geo_json)?e.marker_icon:void 0,t?(null==this.__customIcons&&(this.__customIcons={}),this.__customIcons[o]=t,t):null))},T.prototype.renderObject=function(e,t){var o,n,r,a,r,i,s,l,u,_,c,r,_,p,d,h,f,s,m,p=this.getSettings(),n=function(e){return"sm"===p.marker_size?CUI.dom.addClass(e,"size-mini"):"md"===p.marker_size?CUI.dom.addClass(e,"size-midi"):"lg"===p.marker_size?CUI.dom.addClass(e,"size-maxi"):void 0};switch(m=this,o=function(e){return CUI.dom.setAttribute(e,"marker-signature",t),e.addEventListener("click",function(e){var e,e=m.__getMarkerBySignature(m.__renderedMarkers,e.currentTarget.getAttribute("marker-signature"));if(e)return m.__onMarkerClicked(e)}),e.addEventListener("mouseenter",function(e){var e,e=m.__getMarkerBySignature(m.__renderedMarkers,e.currentTarget.getAttribute("marker-signature"));if(e)return m.__map.showPopup(e.coordinates,e.feature,[0,-e.html.offsetHeight-5])}),e.addEventListener("mouseleave",function(e){return m.__map.removePopup()})},p.marker_format){case"standard":if(s=CUI.dom.div("map-marker-image"),o(s),n(s),d=e.getStandard(e.data),f=(null!=(_=d.eas)?_[1]:void 0)||[],_=CUI.dom.div("map-card"),!e.getMask().hasStandardEASFields()||CUI.util.isEmpty(f)){_.appendChild(EAS.getNoAssetInObjecttypePlaceholder().DOM)}else{for(i=new EASField,a=[],l=u=0,c=f.length;u<c;l=++u)h=f[l],CUI.util.isPlainObject(h)?a.push(new Asset(i,h,f,this.data)):(a.push(new Asset(i,{_error:{code:"result.object.asset.faulty_data_from_server"}})),console.error("ResultObject.__render: standard.eas does not contain value",d,this.getData(),this));r=a[0].getImgElement(null,null,{for_print:!1,show_hourglass:!0,alt:StandardField.getStandardText(e.data)}),_.appendChild(r)}return s.appendChild(_),s;default:return _=CUI.dom.div("map-marker-pin"),o(_),n(_),r='<svg viewBox="0 0 16.32177 20.187037"><path fill="#000000" d="m 8.1359244,0.1192069 c -4.41828,0 -8,4.00258 -8,8.5 0,4.4622001 2.55332,9.3124001 6.5371,11.1744001 0.9286,0.4341 1.9972,0.4341 2.9258,0 3.9837996,-1.862 6.5370996,-6.7122 6.5370996,-11.1744001 0,-4.49742 -3.5817,-8.5 -7.9999996,-8.5 z"/></svg>',s=new CUI.Icon({class:"custom-icon",icon:this.__getCustomIcon(e)||"fa-map-marker"}),_.insertAdjacentHTML("afterbegin",r),r=this.__getCustomColor(e),r&&CUI.dom.setStyle(_,{"--map-pin-background":r}),_.appendChild(s.DOM),_}},T.prototype.getDefaultSettings=function(){return{marker_format:"icon",marker_size:"sm"}},T.prototype.saveSettings=function(){},T.prototype.getSettings=function(){return this.settings},T.prototype.applySettings=function(){var o;this.__renderedMarkers.forEach((o=this,function(t){var e,e;t.html&&(e=o.__resultObjects.find(function(e){return e.getGlobalObjectId()===o.__map.getFeatureProperties(t.feature).global_object_id}),e=o.renderObject(e,t.signature),t.html.replaceWith(e),t.html=e)}))},T})(ResultManagerResult),MapSearchManager,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapSearchManager=(e=>{function a(){return a.__super__.constructor.apply(this,arguments)}return extend(a,e),a.SETTINGS_KEY="search.main.map.settings",a.prototype.initOpts=function(){return a.__super__.initOpts.call(this),this.addOpts({collection:{check:function(e){return e instanceof CollectionSelection}}}),this.removeOpt("container"),this.__linkedToSearch=!0,this.settings=ez5.session.getPref(a.SETTINGS_KEY)||this.getDefaultSettings()},a.prototype.__getMapOpts=function(){var e,n,r;return this._unlinkButton=new CUI.Button({icon_inactive:"fa-chain-broken",icon_active:"fa-link",switch:!0,tooltip:{text:"Link/Unlink the map from the current search results - Unlink let you explore the map without affecting the search results"},active:!0,activate_initial:!1,group:"upper-right-tools",onActivate:(r=this,function(e,t,o){return r.toggleLinkMapFromSearch(!0)}),onDeactivate:(n=this,function(e,t,o){return n.toggleLinkMapFromSearch(!1)})}),e=a.__super__.__getMapOpts.call(this),e.buttonsUpperLeft=[this.getFilterBoundsButton()],e.buttonsUpperRight=[this._unlinkButton],e},a.prototype.toggleLinkMapFromSearch=function(e){return this.__linkedToSearch=e},a.prototype.init=function(){var e,o,e;if(this.__enabled&&!this.__initialized)return e=a.__super__.init.call(this),e.done((o=this,function(){return o._collection&&o._collection.on({type:["insert","select","remove"],instance:o,call:function(e,t){var e,e="remove"===e._type?[]:null!=t?t.collection_objects:void 0;o.__selectionChanged(e)}}),o.__initialized=!0})),e},a.prototype.__onMapReady=function(e){return a.__super__.__onMapReady.call(this),this.getSearch().execute()},a.prototype.afterInit=function(){},a.prototype.enable=function(){return this.__enabled=!0,this.init()},a.prototype.disable=function(){return this.__enabled=!1,this.getSearch().execute()},a.prototype.addToRequest=function(e){if(this.__enabled&&this.__initialized)return a.__super__.addToRequest.call(this,e)},a.prototype.showResult=function(e,t){if(this.__enabled&&this.__initialized)return e.__map_executed||this._unlinkButton.setActive(!0),a.__super__.showResult.call(this,e,t)},a.prototype.getResultContainer=function(){var e;return"function"==typeof(e=this.getSearch()).getMapManagerContainer?e.getMapManagerContainer():void 0},a.prototype.getFilterBoundsButton=function(){var e;return this.__filterBoudsButton||(this.__filterBoudsButton=new CUI.Button({icon:"fa-filter",tooltip:{text:"Adds the current map bounds to the current search as an input query"},group:"upper-left-tools",onClick:(e=this,function(){return e.addGeoBoundingBoxQueryElement()})})),this.__filterBoudsButton},a.prototype.__hasGeoBoundingBoxFilter=function(){var e,t,e=this.getSearch().getSearchManagers().find((t=this,function(e){return e instanceof SearchInput})),o;return!!e&&e.query.some((o=this,function(e){return e instanceof QueryElementGeoBoundingBox}))},a.prototype.__onMarkerClicked=function(e){return this.__linkedToSearch?a.__super__.__onMarkerClicked.call(this,e):this.getCollectionSelection().loadInSidebar({global_object_id:this.__map.getFeatureProperties(e.feature).global_object_id})},a.prototype.__onMapMoveEnd=function(){var e,t,e,o,t=new Request;return this.__linkedToSearch||(t.exclusive_show=!0,e=this.getSearch().getSearchManagers().filter((o=this,function(e){return!(e instanceof ResultManagerResult)})),e.push(this),t.searchManagers=e),t.__map_executed=!0,t.avoid_wait_block=!0,null!=(e=this.getSearch())?e.execute(t):void 0},a.prototype.getCollectionSelection=function(){return this._collection},a.prototype.__selectionChanged=function(e){var t,o,n,r,a,i,s,l,u,_;if(this.__initialized&&this.__enabled&&!CUI.util.isEmpty(this.__renderedMarkers))if(0===e.length){if(this._last_selected_objects!==[])for(l=this.__renderedMarkers,n=0,a=l.length;n<a;n++)s=l[n],CUI.dom.removeClass(s.html,"selected");this._last_selected_objects=[]}else{if(o=new Set(e.map(function(e){return e.getGlobalObjectId()})),o=new Set(e.map(function(e){return e.getGlobalObjectId()})),this._last_selected_objects&&o.size===this._last_selected_objects.size){for(u=!0,r=0,i=o.length;r<i;r++)if(t=o[r],!this._last_selected_objects.has(t)){u=!1;break}if(u)return}this._last_selected_objects=o,this.__renderedMarkers.forEach((_=this,function(e){o.has(_.__map.getFeatureProperties(e.feature).global_object_id)?CUI.dom.addClass(e.html,"selected"):CUI.dom.removeClass(e.html,"selected")}))}},a.getManagerButton=function(e){var e;return null==e&&(e={}),e=CUI.Element.readOpts(e,"MapSearchManager.getManagerButton",{onActivate:{check:Function},onDeactivate:{check:Function}}),new LocaButton({switch:!0,ui:"search.main.map.button",loca_key:"search.main.map.button",group:"map",onActivate:e.onActivate,onDeactivate:e.onDeactivate})},a.prototype.getManagerSettingButton=function(){var e;return this.__mapManagerSettingsBtn=new LocaButton({ui:"search.main.map.settings.button",class:"ez5-result-manager-button-options",loca_key:"result.manager.button.options",group:"map",onClick:(e=this,function(){return e.getSettingsPopover().show()})}),this.__mapManagerSettingsBtn},a.prototype.getSettingsPopover=function(e){var t,o,n;return null==e&&(e={}),t=new CUI.Popover({element:this.__mapManagerSettingsBtn,backdrop:{policy:"click"},class:"view-select-popover",pane:{header_left:new LocaLabel({loca_key:"search.main.map.settings.title"}),padded:!0,content:(n=this,function(){var e,e,e=n.getSettings(),e=new CUI.Form({data:e,fields:[{type:CUI.Options,name:"marker_format",form:{label:$$("search.main.map.settings.marker_format")},radio:!0,horizontal:!1,options:[{value:"standard",text:$$("search.main.map.settings.marker_format.standard")},{value:"icon",text:$$("search.main.map.settings.marker_format.icon")}]},{type:CUI.Options,name:"marker_size",form:{label:$$("search.main.map.settings.marker_size")},radio:!0,horizontal:!1,options:[{value:"sm",text:$$("search.main.map.settings.marker_size.sm")},{value:"md",text:$$("search.main.map.settings.marker_size.md")},{value:"lg",text:$$("search.main.map.settings.marker_size.lg")}]}],onDataChanged:function(){return n.applySettings(),t.changes=!0}});return e.start()})},onHide:(o=this,function(){return t.changes&&o.saveSettings(),"function"==typeof e.onHide?e.onHide(t.changes):void 0})})},a.prototype.saveSettings=function(){return ez5.session.savePref(a.SETTINGS_KEY,this.settings,!0)},a})(ResultMap),GeoJsonMap,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonMap=(e=>{function GeoJsonMap(e){GeoJsonMap.__super__.constructor.call(this,e)}return extend(GeoJsonMap,e),GeoJsonMap.prototype.initOpts=function(){return GeoJsonMap.__super__.initOpts.call(this),this.addOpts({renderPopup:{check:Function},onRender:{check:Function},onLoad:{check:Function},searchInput:{check:Boolean,default:!0},tilesSelector:{check:Boolean,default:!0},defaultSource:{check:String,default:"fylr-default"},styleFunction:{check:Function}})},GeoJsonMap.prototype.readOpts=function(){var e,e,t,o,n;if(GeoJsonMap.__super__.readOpts.call(this),this._searchInput&&(this.__searchInputData={},e=new MapSearchSelector({data:this.__searchInputData,name:"mapSearchInput",placeholder:"Search for a location",onFeatureSelected:(t=this,function(e){return t.fitData(e,.1)})}),this._buttonsUpperLeft?this._buttonsUpperLeft.push(e.start()):this._buttonsUpperLeft=[e.start()]),this._tilesSelector&&1<this.__getTilesSelectorOptions().length)return this.__tilesSelectorData={},e=new CUI.Select({options:(n=this,function(){return n.__getTilesSelectorOptions()}),name:"mapTileType",data:this.__tilesSelectorData,onDataChanged:(o=this,function(){return o.__onTilesSelectorChange()})}),this._buttonsUpperRight?this._buttonsUpperRight.push(e.start()):this._buttonsUpperRight=[e.start()]},GeoJsonMap.load=function(e){var t,o,t=new CUI.Deferred;return this.__loadTurf().done((o=this,function(){switch(GeoJsonMap.getMapType()){case"mapbox":return MapboxMap.loadDependencies().done(function(){return t.resolve(new MapboxMap(e))}).fail(function(e){return t.reject(e)});case"ol":return OpenLayersMap.loadDependencies().done(function(){return t.resolve(new OpenLayersMap(e))}).fail(function(e){return t.reject(e)});default:return CUI.util.assert(!1,"Unknown map type: "+mapType),CUI.rejectedPromise()}})).fail(t.reject),t.promise()},GeoJsonMap.__loadTurf=function(){var e,e,t;return GeoJsonMap.__turfLoaded?CUI.resolvedPromise():(e=ez5.pluginManager.getPlugin("geo-json").getBareBaseURL()+"/thirdparty/turf/turf.min.js",e=CUI.loadScript(e),e.done((t=this,function(){return GeoJsonMap.__turfLoaded=!0})),e)},GeoJsonMap.getMapType=function(){var e,e,e,e=null!=(e=GeoJsonMap.getConfig())&&null!=(e=e.map_type)?e.select:void 0;return CUI.util.isEmpty(e)&&(e="ol"),e},GeoJsonMap.getMapClass=function(){var e,e=GeoJsonMap.getMapType();switch(e){case"mapbox":return MapboxMap;case"ol":return OpenLayersMap;default:return CUI.util.assert(!1,"Unknown map type: "+e),null}},GeoJsonMap.getConfig=function(){return ez5.session.getBaseConfig("plugin","geo-json")},GeoJsonMap.canLoad=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".canLoad: needs to be implemented.")},GeoJsonMap.prototype.addSource=function(e,t){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".addSource needs to be implemented.")},GeoJsonMap.prototype.fitData=function(e,t,o){return null==o&&(o=!0),CUI.util.assert(!1,CUI.util.getObjectClass(this)+".fitData needs to be implemented.")},GeoJsonMap.prototype.__addLayers=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".__addLayers needs to be implemented.")},GeoJsonMap.prototype.addDataToSource=function(e,t,o){return null==o&&(o=!1),CUI.util.assert(!1,CUI.util.getObjectClass(this)+".addDataToSource needs to be implemented.")},GeoJsonMap.prototype.getBounds=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getBounds needs to be implemented.")},GeoJsonMap.prototype.getMapCoordsFromEvent=function(e){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getMapCoordsFromEvent needs to be implemented.")},GeoJsonMap.prototype.getPrecision=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".getPrecision needs to be implemented.")},GeoJsonMap.prototype.getFeatureProperties=function(e){return e.properties},GeoJsonMap.prototype.getFeatureGeometry=function(e){return e.geometry},GeoJsonMap.prototype.getFeatureType=function(e){return e.geometry.type},GeoJsonMap.prototype.getFeatureCoordinates=function(e){return e.geometry.coordinates},GeoJsonMap.prototype.isFeatureCluster=function(e){return!1},GeoJsonMap.prototype.getClusterId=function(e){return null},GeoJsonMap.prototype.updateClusterLabel=function(e,t){},GeoJsonMap.prototype.zoomToCluster=function(e,t){},GeoJsonMap.getCenterCoordsForFeature=function(e){var e,e=turf.center(e);return e.geometry.coordinates},GeoJsonMap.flattenArrayOfFeatures=function(e){var t,o,n,r,a,i;for(CUI.util.isArray(e)||(e=[e]),t=[],n=0,r=e.length;n<r;n++)o=e[n],null!=o.type&&"Feature"!==(a=o.type)&&"FeatureCollection"!==a&&(o=turf.feature(o)),o.features||"Feature"!==o.type?o.features.forEach((i=this,function(e){return"FeatureCollection"===e.type?e.features.forEach(function(e){return t.push(e)}):t.push(e)})):t.push(o);return turf.featureCollection(t)},GeoJsonMap.decomposePolygonToBoundingBoxes=function(t,e,o){var n,r,n,n;return null==e&&(e=1),null==o&&(o="kilometers"),"Polygon"!==(n=turf.getType(t))&&"MultiPolygon"!==n?null:(n=turf.bbox(t),n=turf.squareGrid(n,e,{units:o}),r=[],n.features.forEach(function(e){var e,e=turf.intersect(e,t);if(e)return r.push(e)}),turf.featureCollection(r))},GeoJsonMap.prototype.__getTilesSelectorOptions=function(){return[]},GeoJsonMap.prototype.__onTilesSelectorChange=function(){return CUI.util.assert(!1,CUI.util.getObjectClass(this)+".__onTilesSelectorChange needs to be implemented.")},GeoJsonMap})(CUI.Map),OpenLayersMap,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,OpenLayersMap=(e=>{function OpenLayersMap(e){this.__isMapResizing=!1,OpenLayersMap.__super__.constructor.call(this,e)}return extend(OpenLayersMap,e),OpenLayersMap.prototype.initOpts=function(){return OpenLayersMap.__super__.initOpts.call(this),this.addOpts({zoom:{check:"Integer",default:1},cluster:{check:Boolean,default:!0},drawFeatures:{check:Array,default:["Point","LineString","Polygon","MultiPolygon"]}})},OpenLayersMap.canLoad=function(){return!0},OpenLayersMap.loadDependencies=function(){var e,t,o,e,n;return OpenLayersMap.__dependenciesLoaded?CUI.resolvedPromise():(o=new CUI.Deferred,OpenLayersMap.dependenciesPromises=[],e="https://cdn.jsdelivr.net/npm/ol@v10.2.1/dist/ol.js",t="https://cdn.jsdelivr.net/npm/ol@v10.2.1/ol.css",OpenLayersMap.dependenciesPromises.push(CUI.loadScript(e)),OpenLayersMap.dependenciesPromises.push((new CUI.CSSLoader).load({url:t})),e=CUI.whenAll(OpenLayersMap.dependenciesPromises),e.done((n=this,function(){var e,e;return CUI.util.isEmpty(null!=(e=GeoJsonMap.getConfig())?e.custom_map_styles:void 0)?(OpenLayersMap.__dependenciesLoaded=!0,o.resolve()):(e="https://cdn.jsdelivr.net/npm/ol-mapbox-style/dist/olms.js",CUI.loadScript(e).done(function(){return OpenLayersMap.__dependenciesLoaded=!0,o.resolve()}))})),o.promise())},OpenLayersMap.prototype.__getMapClassName=function(){return"cui-openlayers-map"},OpenLayersMap.prototype.__onReady=function(){return null!=this._centerPosition?this.__initCenter=this._centerPosition:this.__initCenter=this.getCenter(),null!=this._zoom?this.__initZoom=this._zoom:this.__initZoom=this.getZoom(),this.setCenter(),"function"==typeof this._onReady?this._onReady(this):void 0},OpenLayersMap.prototype.getCenter=function(){var e,e,e,e=this.__map.getView(),e=e.getCenter(),e=ol.proj.toLonLat(e,"EPSG:3857");return{lat:e[1],lng:e[0]}},OpenLayersMap.prototype.__buildMap=function(){var e,t,o,n,r,a,e,e,i,s,l,u,_,c,p;for(this.__mapReady=new CUI.Deferred,n=this.get("center"),e=new ol.View({center:ol.proj.fromLonLat([0,0]),zoom:2,projection:"EPSG:3857",extent:ol.proj.get("EPSG:3857").getExtent()}),this.__map=new ol.Map({target:n,view:e,layers:[],controls:[],interactions:[new ol.interaction.DragPan,new ol.interaction.PinchZoom,new ol.interaction.MouseWheelZoom,new ol.interaction.DragZoom,new ol.interaction.DoubleClickZoom,new ol.interaction.DragRotate,new ol.interaction.KeyboardPan,new ol.interaction.KeyboardZoom]}),e=new ol.layer.Tile({source:new ol.source.OSM}),this.__map.addLayer(e),this.__vectorSource=new ol.source.Vector({features:[]}),null==this.__sources&&(this.__sources={}),e=this._defaultSource||"fylr-default",this.__sources[e]=this.__vectorSource,this._cluster?(this.__clusterCounter=0,this.__clusterSource=new ol.source.Cluster({distance:50,source:this.__vectorSource}),this.__clusterSource.on("addfeature",(i=this,function(e){var e,e=e.feature;if(i.isFeatureCluster(e))return e.set("cluster_id",i.__clusterCounter++)})),this.__vectorLayer=new ol.layer.Vector({source:this.__clusterSource,style:function(e){var e,e=e.get("features").length;return new ol.style.Style({image:new ol.style.Circle({radius:10,stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:"#3399CC"})}),text:new ol.style.Text({text:e.toString(),fill:new ol.style.Fill({color:"#fff"})})})}})):this.__vectorLayer=new ol.layer.Vector({source:this.__vectorSource}),this.__map.addLayer(this.__vectorLayer),this.__addLayers(),this.__map.once("rendercomplete",(s=this,function(){if(s.__mapReady.resolve(),s._onLoad)return s._onLoad(s)})),this._onRender&&this.__map.on("postrender",(l=this,function(){var e,t,o,n,r,a,e=l.__map.getView().calculateExtent(l.__map.getSize()),a=l.__vectorLayer.getSource().getFeaturesInExtent(e),o=[];if(l._cluster)for(n=0,r=a.length;n<r;n++)t=a[n],l.isFeatureCluster(t)?o.push(t):o.push(t.get("features")[0]);else o=a;return l._onRender(l,o)})),this._onClick&&this.__map.on("click",(u=this,function(e){var t,o,o=u.__map.forEachFeatureAtPixel(e.pixel,function(e){return e}),t=u.getMapCoordsFromEvent(e);return u._onClick(e,u,o,t)})),this._onZoomEnd&&this.__map.getView().on("change:resolution",(_=this,function(){if(!_.__isMapResizing)return _._onZoomEnd()})),this.__map.on("moveend",(c=this,function(e){if(c.removePopup(),!c.__isMapResizing)return c.__onMoveEnd(e)})),CUI.dom.waitForDOMInsert({node:this}).done((p=this,function(){return p.__onReady()})),this.__detailOverlay=new ol.Overlay({element:document.createElement("div"),autoPan:!1,positioning:"bottom-center",offset:[0,-25]}),this.__map.addOverlay(this.__detailOverlay),CUI.dom.setStyleOne(CUI.dom.parent(this.__mapTemplate.get("buttons-upper-left")),"pointer-events","none"),r=["buttons-upper-left","buttons-upper-right","buttons-bottom-left","buttons-bottom-right"],t=0,o=r.length;t<o;t++)a=r[t],CUI.dom.setStyleOne(this.__mapTemplate.get(a),"pointer-events","all");return CUI.dom.setStyleOne(n,"padding","0px"),this.__map},OpenLayersMap.prototype.isMapReady=function(){return"resolved"===this.__mapReady.state()},OpenLayersMap.prototype.__mapNotLoadedSchedule=function(e){var t;return!this.isMapReady()&&(this.__mapReady.done((t=this,function(){return e()})),!0)},OpenLayersMap.prototype.getZoom=function(){return this.__map.getView().getZoom()},OpenLayersMap.prototype.resize=function(e){var t;return null==e&&(e=!1),e||(this.__isMapResizing=!0,setTimeout((t=this,function(){return t.__isMapResizing=!1}),500)),this.__map.updateSize()},OpenLayersMap.prototype.zoomIn=function(){var e,e=this.__map.getView();return e.setZoom(e.getZoom()+1)},OpenLayersMap.prototype.zoomOut=function(){var e,e=this.__map.getView();return e.setZoom(e.getZoom()-1)},OpenLayersMap.prototype.setCenter=function(){var e,e=this.__map.getView();return e.setCenter(ol.proj.fromLonLat([this.__initCenter.lng,this.__initCenter.lat])),e.setZoom(this.__initZoom)},OpenLayersMap.prototype.addSource=function(e,t){var o,o,o,o,n;if(!this.__mapNotLoadedSchedule((n=this,function(){return n.addSource(e,t)})))return null==this.__sources&&(this.__sources={}),o=new ol.format.GeoJSON,o=o.readFeatures(t,{featureProjection:"EPSG:3857"}),o=new ol.source.Vector({features:o}),this.__sources[e]=o,o=new ol.layer.Vector({source:o}),this.__map.addLayer(o),null==this.__layers&&(this.__layers={}),this.__layers[e]=o},OpenLayersMap.prototype.getSource=function(e){var t;return null==e&&(e="fylr-default"),null!=(t=this.__sources)?t[e]:void 0},OpenLayersMap.prototype.fitData=function(e,t,o,n){var r,a,i,s,l,u,s,s,s,_,c;if((null==t&&(t=100),null==o&&(o=!0),null==n&&(n=16),!this.__mapNotLoadedSchedule((_=this,function(){return _.fitData(e,t,o,n)})))&&this.__map){if(CUI.util.isEmpty(e)){if(s=null!=(s=this.__sources)?s["fylr-default"]:void 0,!s)return;i=s.getFeatures()}else s=new ol.format.GeoJSON,i=s.readFeatures(e,{featureProjection:"EPSG:3857"});if(0<i.length){for(r=ol.extent.createEmpty(),l=0,u=i.length;l<u;l++)a=i[l],ol.extent.extend(r,a.getGeometry().getExtent());if(!r.some((c=this,function(e){return!isFinite(e)})))return-1===n&&(n=(null!=(s=this.__map.getView())?s.getZoom():void 0)||16),this.__map.getView().fit(r,{padding:[t,t,t,t],duration:o?500:0,maxZoom:n})}}},OpenLayersMap.prototype.addDataToSource=function(e,t,o){var n,r,a,i,n,s,l,u,_,c,p;if(null==o&&(o=!1),!this.__mapNotLoadedSchedule((_=this,function(){return _.addDataToSource(e,t,o)})))try{if(u=this.__sources[e],!u)return this.addSource(e,t);if(n=new ol.format.GeoJSON,i=n.readFeatures(t,{featureProjection:"EPSG:3857"}),u.clear(),u.addFeatures(i),o){for(r=ol.extent.createEmpty(),s=0,l=i.length;s<l;s++)a=i[s],ol.extent.extend(r,a.getGeometry().getExtent());if(!r.some((p=this,function(e){return!isFinite(e)})))return setTimeout((c=this,function(){return c.__map.getView().fit(r,{duration:500,padding:[100,100,100,100],maxZoom:16})}),500)}}catch(e){return n=e,console.log(n)}},OpenLayersMap.prototype.getDataFromSource=function(e){var e,t,e,e=this.__sources[e];if(e)return e=e.getFeatures(),t=new ol.format.GeoJSON,t.writeFeaturesObject(e,{featureProjection:"EPSG:3857"})},OpenLayersMap.prototype.addLayer=function(e){return this.__map.addLayer(e)},OpenLayersMap.prototype.__addLayers=function(){var e,e,e,e,e,t;this.__drawPoints=0<=(null!=(e=this._drawFeatures)?e.indexOf("Point"):void 0),this.__drawLines=0<=(null!=(e=this._drawFeatures)?e.indexOf("LineString"):void 0),this.__drawPolygons=0<=(null!=(e=this._drawFeatures)?e.indexOf("Polygon"):void 0)||0<=(null!=(e=this._drawFeatures)?e.indexOf("MultiPolygon"):void 0),t=this,e=function(e){var e,e=e.getGeometry().getType();return"Point"===e&&t.__drawPoints?new ol.style.Style({image:new ol.style.Circle({radius:5,fill:new ol.style.Fill({color:"#FFFFFF"}),stroke:new ol.style.Stroke({color:"#212121",width:3})})}):"LineString"===e&&t.__drawLines?new ol.style.Style({stroke:new ol.style.Stroke({color:"#212121",width:3})}):"Polygon"!==e&&"MultiPolygon"!==e||!t.__drawPolygons?void 0:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(240, 56, 0, 0.6)"}),stroke:new ol.style.Stroke({color:"#000",width:1})})},null!=this._styleFunction?this.__vectorLayer.setStyle(this._styleFunction):this.__vectorLayer.setStyle(e)},OpenLayersMap.prototype.showPopup=function(e,t,o,n){var t,r;if(null==o&&(o=[0,0]),null==n&&(n=this.__detailOverlay),t=this._renderPopup(t),t){for(r=n.getElement();r.firstChild;)r.removeChild(r.firstChild);return r.appendChild(t),n.setOffset(o),n.setPosition(ol.proj.fromLonLat(e))}},OpenLayersMap.prototype.removePopup=function(e){return null==e&&(e=this.__detailOverlay),e.setPosition(void 0)},OpenLayersMap.prototype.getBounds=function(){var e,t,o,e=this.__map.getView().calculateExtent(this.__map.getSize()),o=ol.proj.toLonLat([e[0],e[1]],"EPSG:3857"),t=ol.proj.toLonLat([e[2],e[3]],"EPSG:3857");return{getNorthWest:function(){return{lng:o[0],lat:t[1]}},getSouthEast:function(){return{lng:t[0],lat:o[1]}}}},OpenLayersMap.prototype.getFeatureProperties=function(e){return e.getProperties()},OpenLayersMap.prototype.getFeatureGeometry=function(e){return e.getGeometry()},OpenLayersMap.prototype.getFeatureType=function(e){return e.getGeometry().getType()},OpenLayersMap.prototype.getFeatureCoordinates=function(e){return ol.proj.toLonLat(e.getGeometry().getCoordinates())},OpenLayersMap.prototype.isFeatureCluster=function(e){var e;return 1<(null!=(e=e.get("features"))?e.length:void 0)},OpenLayersMap.prototype.getClusterId=function(e){return e.get("cluster_id")},OpenLayersMap.prototype.updateClusterLabel=function(e,t){var o,n,r,a,i;if(e.get("doc_count"))i=e.get("doc_count");else for(i=0,a=e.get("features"),n=0,r=a.length;n<r;n++)o=a[n],o.get("doc_count")?i+=o.get("doc_count"):i+=1;return CUI.dom.replace(t,new CUI.Label({text:""+i}).DOM)},OpenLayersMap.prototype.zoomToCluster=function(e,t){var o,e,e=e.get("features")||[];if(0<e.length)return o=ol.extent.createEmpty(),e.forEach(function(e){return ol.extent.extend(o,e.getGeometry().getExtent())}),this.__map.getView().fit(o,{duration:500,padding:[100,100,100,100],maxZoom:16})},OpenLayersMap.prototype.addMarker=function(e){var t,o,t,o=new ol.Feature({geometry:new ol.geom.Point(ol.proj.fromLonLat(e.coordinates))}),t=e.anchor||"center-center",n;return e.html?(t=new ol.Overlay({element:e.html,position:ol.proj.fromLonLat(e.coordinates),positioning:t}),this.__map.addOverlay(t),e.reference=t,e.html.addEventListener("wheel",(n=this,function(e){return e.preventDefault(),n.__map.getViewport().dispatchEvent(new WheelEvent("wheel",e))}))):(this.__vectorSource.addFeature(o),e.reference=o)},OpenLayersMap.prototype.removeMarker=function(e){if(e.reference)return e.reference instanceof ol.Feature?this.__vectorSource.removeFeature(e.reference):e.reference instanceof ol.Overlay&&this.__map.removeOverlay(e.reference),delete e.reference},OpenLayersMap.prototype.__disableEnableZoomButtons=function(){},OpenLayersMap.prototype.easeTo=function(e,t){var e,o,o=this.__map.getView();if(null!=e&&2===e.length&&"number"==typeof t)return e=ol.proj.fromLonLat(e),o.animate({center:e,zoom:t,duration:500})},OpenLayersMap.prototype.getMapCoordsFromEvent=function(e){var t;return null==e.coordinate?e.pixel&&(t=ol.proj.toLonLat(e.coordinate=this.__map.getCoordinateFromPixel(e.pixel))):t=ol.proj.toLonLat(e.coordinate),null==t?null:{lng:t[0],lat:t[1]}},OpenLayersMap.prototype.getPrecision=function(){var e,e,e=this.getZoom(),e=13<=e?8:11<=e?7:9<=e?6:7<=e?5:5<=e?4:3;return e},OpenLayersMap.prototype.__getTilesSelectorOptions=function(){var e,t,o,n,r,r,r,r,r,a,i,e=[{text:"Default",value:"default"},{text:"Satellite",value:"satellite"}];if(0<(null!=(r=GeoJsonMap.getConfig())&&null!=(r=r.custom_map_styles)&&null!=(r=r.styles)?r.length:void 0))for(a=null!=(r=GeoJsonMap.getConfig())&&null!=(r=r.custom_map_styles)?r.styles:void 0,o=t=0,n=a.length;t<n;o=++t)i=a[o],e.push({text:i.name,value:o});return e},OpenLayersMap.prototype.__onTilesSelectorChange=function(){var e,t,o,e,e,e,e,n,r,r,r=this.__tilesSelectorData.mapTileType;if("number"!=typeof r){for(o in this.__map.getLayers().clear(),e="satellite"===r?new ol.layer.Tile({source:new ol.source.XYZ({url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"})}):new ol.layer.Tile({source:new ol.source.OSM}),this.__map.addLayer(e),this.__map.addLayer(this.__vectorLayer),n=null!=this._layers,n)t=n[o],this.__map.addLayer(t);return this.__map.renderSync()}if(r=null!=(e=GeoJsonMap.getConfig())&&null!=(e=e.custom_map_styles)&&null!=(e=e.styles)&&null!=(e=e[r])?e.value:void 0,null!=r){if(null==r.url)return olms.apply(this.__map,r);olms.apply(this.__map,r.url)}},OpenLayersMap})(GeoJsonMap),GeoJsonFeatureItem,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonFeatureItem=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this),this.addOpts({name:{check:String},feature:{check:"PlainObject",default:{}},is_valid:{check:Boolean,default:!0},validation_message:{check:String}})},t.prototype.readOpts=function(){return t.__super__.readOpts.call(this),this},t.prototype.renderContent=function(){var e,t,t,o,e=GeoJsonColumn.renderFeature(this._feature);return this._is_valid||(e.addClass("ez5-geo-feature-invalid"),t=new CUI.Icon({icon:"fa-exclamation-triangle",class:"ez5-geo-feature-warning-icon"}),o=new CUI.Label({text:this._validation_message||"Invalid feature for current editor configuration",class:"ez5-geo-feature-warning-text",size:"mini"}),t=new CUI.HorizontalLayout({class:"ez5-geo-feature-warning",left:{content:t},center:{content:o}}),e=new CUI.VerticalLayout({class:"ez5-geo-feature-with-warning",top:{content:e},bottom:{content:t}})),e},t})(CUI.ListViewTreeNode),MapEditor,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,indexOf=[].indexOf||function(e){for(var t=0,o=this.length;t<o;t++)if(t in this&&this[t]===e)return t;return-1},MapEditor=(e=>{function s(){return s.__super__.constructor.apply(this,arguments)}return extend(s,e),s.MAP_SOURCE_NAME="fylr-default",s.MAP_EDITOR_SOURCE_NAME="fylr-map-editor",s.prototype.initOpts=function(){return s.__super__.initOpts.call(this),this.addOpts({initial_center:{check:"PlainObject"},initial_zoom:{check:"Integer"},field:{mandatory:!0,check:Field},data:{check:"PlainObject"},mode:{mandatory:!0,default:"editor",check:["editor","detail"]},done:{default:function(){},check:Function},basic_mode:{default:!1,check:Boolean},single_feature:{default:!1,check:Boolean},allowed_feature_types:{default:"full",check:function(e){return"full"===e||"points"===e||"lines"===e||"polygons"===e||"geocoder"===e||CUI.util.isArray(e)&&e.every(function(e){return"points"===e||"lines"===e||"polygons"===e||"geocoder"===e})}},popover_element:{check:function(e){return CUI.util.isElement(e)||CUI.util.isElement(null!=e?e.DOM:void 0)}}})},s.prototype.readOpts=function(){return s.__super__.readOpts.call(this),this.mode=this._mode,this.basic_mode=this._basic_mode,this.popover_element=this._popover_element,this.basic_mode?(this.single_feature=!0,this.allowed_feature_types="points"):(this.single_feature=this._single_feature,this.allowed_feature_types=this._allowed_feature_types),CUI.util.isEmpty(this._data)&&(this._data=GeoJsonColumn.emptyFeatureCollection()),this.data=this._data||GeoJsonColumn.emptyFeatureCollection(),this.__features=this.__getFeaturesFromData(),this.field=this._field,this.__done=this._done,this.__dataValidation=this.__validateExistingData(),this.basic_mode?this.__tmpl=new CUI.Template({name:"map-editor-basic",init_flex_handles:!0,map:{tools:!0,map_view:!0}}):this.__tmpl=new CUI.Template({name:"map-editor",init_flex_handles:!0,map:{list:!0,tools:!0,map_view:!0,feature_form:!0}}),this.basic_mode||(this.featuresList=this.__tmpl.map.list,this.__renderFeaturesList(),this.__renderFeatureDetail()),this.mapView=this.__tmpl.map.map_view,this.tools=this.__tmpl.map.tools,this.init(),this.basic_mode?this.__createPopover():this.__createModal(),CUI.scheduleCallback({ms:100,call:(e=this,function(){return e.__showDataWarnings(e.__dataValidation)})});var e},s.prototype.__createPopover=function(){var e;return this.popover=new CUI.Popover({element:this.popover_element,ui:"map.editor.popover",class:"ez5-map-editor-popover ez5-map-editor-popover--basic",placement:"w",cancel:!0,onCancel:function(){},pane:{content:this.__tmpl,header_left:new CUI.Label({text:"Map Editor"}),footer_right:(e=this,function(){return e.buttons()})}}),this.popover.show()},s.prototype.__createModal=function(){var e;return this.modal=new CUI.Modal({ui:"map.editor.modal",class:"ez5-map-editor-modal ez5-map-editor-modal--"+this.mode,fill_space:"both",cancel:!0,onCancel:function(){},pane:{content:this.__tmpl,header_left:new LocaLabel({loca_key:"map.editor.title."+this.mode}),footer_right:(e=this,function(){return e.buttons()})}}),this.modal.show()},s.prototype.init=function(){var e,t,o,n,r,a,e={clickable:!1,cluster:!1,zoom:this._initial_zoom,centerPosition:this._initial_center,zoomToFitAllMarkersOnInit:!0,onClick:(n=this,function(e,t){return n.__onMapClick(e,t)}),onReady:(o=this,function(){o.__onMapReady(),o.__map.resize()}),onLoad:(t=this,function(){t.__onMapLoad()})};GeoJsonMap.load(e).done((a=this,function(e){return a.__map=e,CUI.dom.append(a.mapView,a.__map),a.renderTools()})).fail((r=this,function(e){return console.error(e)}))},s.prototype.__showMapContextButtonBar=function(e,t){var o,n,r,e,a,n=[],e=new CUI.Label({text:e});if(n.push(e),t)if(t instanceof Array)for(r=0,a=t.length;r<a;r++)o=t[r],n.push(o);else n.push(t);return this.__mapContextButtonBar=new CUI.Buttonbar({class:"ez5-selected-objects-badge",buttons:n}),CUI.dom.append(this.__map.__mapTemplate.get("buttons-bottom-center"),this.__mapContextButtonBar)},s.prototype.__hideMapContextButtonBar=function(){this.__mapContextButtonBar&&(this.__mapContextButtonBar.hide(),this.__mapContextButtonBar.destroy(),this.__mapContextButtonBar=null)},s.prototype.__onMapLoad=function(){var e,e=this.__getGeoJsonFromFeatures([]);this.__map.addSource(s.MAP_EDITOR_SOURCE_NAME,e)},s.prototype.__isFeatureTypeAllowed=function(e){return"full"===this.allowed_feature_types||(CUI.util.isArray(this.allowed_feature_types)?0<=indexOf.call(this.allowed_feature_types,e):this.allowed_feature_types===e)},s.prototype.__getFeatureType=function(e){var e,e,e=null!=e&&null!=(e=e.geometry)?e.type:void 0;switch(e){case"Point":return"points";case"LineString":return"lines";case"Polygon":return"polygons";default:return null}},s.prototype.__validateExistingData=function(){var e,t,o,n,r,a,i,s;if(!this.__features||0===this.__features.length)return{valid:!0,warnings:[]};for(s=[],i=[],n=[],a=this.__features,o=0,r=a.length;o<r;o++)e=a[o],t=this.__getFeatureType(e),(t&&this.__isFeatureTypeAllowed(t)?i:n).push(e);return 0<n.length&&s.push({type:"invalid_types",count:n.length,features:n}),this.single_feature&&1<this.__features.length&&s.push({type:"too_many_features",count:i.length,features:i.slice(1)}),{valid:0===s.length,warnings:s,validFeatures:i,invalidFeatures:n}},s.prototype.__showDataWarnings=function(e){var t,o,n,r,a,i,s;if(!e.valid){for(i=[],r=e.warnings,o=0,n=r.length;o<n;o++)switch(a=r[o],a.type){case"invalid_types":t="full"===this.allowed_feature_types?"all types":CUI.util.isArray(this.allowed_feature_types)?this.allowed_feature_types.join(", "):this.allowed_feature_types,i.push($$("map.editor.warning.invalid_types",{count:a.count,allowedTypes:t}));break;case"too_many_features":i.push($$("map.editor.warning.only_one",{count:a.count}))}return 0<i.length&&(s=i.join("\n"),s+="\n\n"+$$("map.editor.warning.extra")),CUI.problem({text:s})}},s.prototype.__hideDataWarnings=function(){if(this.__warningBar)return this.__warningBar.destroy(),this.__warningBar=null},s.prototype.getTools=function(){var e,o,n,r,a,e=[];return this.__isFeatureTypeAllowed("points")&&e.push(this.__drawPointToolboxTool=new ToolboxTool({name:"add-point",loca_key:"map.editor.tool.add_point",group:"geometry",run:(o=this,function(e,t){return o.__enableDrawMode("point",t)})})),this.__isFeatureTypeAllowed("polygons")&&e.push(this.__drawPolygonToolboxTool=new ToolboxTool({name:"add-polygon",loca_key:"map.editor.tool.add_polygon",group:"geometry",run:(n=this,function(e,t){return n.__enableDrawMode("polygon",t)})})),this.__isFeatureTypeAllowed("lines")&&e.push(this.__drawLineToolboxTool=new ToolboxTool({name:"add-line",loca_key:"map.editor.tool.add_line",group:"geometry",run:(r=this,function(e,t){return r.__enableDrawMode("line",t)})})),this.__isFeatureTypeAllowed("geocoder")&&e.push(this.__geoCoderToolboxTool=new ToolboxTool({name:"geocoder",loca_key:"map.editor.tool.geocoder",group:"geometry",run:(a=this,function(e,t){return a.__enableDrawMode("geocoder",t)})})),e},s.prototype.renderTools=function(){var e,t,o,n,r,a,i,s,l,u;if("detail"!==this.mode){for(t=[],null==this.toolInstances&&(this.toolInstances=[]),s=this.getTools(),o=0,a=s.length;o<a;o++)u=s[o],u&&(n=CUI.util.idxInArray(u,this.toolInstances,function(e,t){return e.getName()===t.getName()}),-1===n?this.toolInstances.push(u):u.destroy());for(l=this.toolInstances,r=0,i=l.length;r<i;r++)u=l[r],u.$btn||(_=this,(o=>{var e,t,t=o.getLabelKeys(),e=o.getName()||"";t.icon=o.getIcon(),t.size="big",t.group=o.getGroup(),t.disabled=o.isDisabled(),t.onClick=function(e,t){return o.run(e,t)},o.$btn=new LocaButton(t)})(u)),t.push(u.$btn);var _,e=new CUI.Buttonbar({buttons:t});return this.__tmpl.replace(e,"tools"),this}},s.prototype.buttons=function(){var t;return this.__doneButton=new LocaButton({loca_key:"asset.versions.button.done",ui:"map_editor.done.button",primary:!0,onClick:(t=this,function(e){return(t.basic_mode?t.popover:t.modal).destroy(),t.__done(t.__getGeoJsonFromFeatures())})}),[this.__doneButton]},s.prototype.__renderFeatureDetail=function(){var a,e,t,i,o,o,o,o,o,t,s,n,r,l,u,_;this.basic_mode||(this.__tmpl.map.feature_form.empty(),e=new CUI.EmptyLabel({text:'Select "Location" from list',centered:!0,markdown:!0}),this.selectedFeature&&(this.__selected_feature_saved_data=CUI.util.copyObjectV2(this.selectedFeature,!0),t=[],"Point"===this.selectedFeature.geometry.type?t=[{lng:this.selectedFeature.geometry.coordinates[0],lat:this.selectedFeature.geometry.coordinates[1]}]:"Polygon"===this.selectedFeature.geometry.type?CUI.util.isEmpty(this.selectedFeature.geometry.coordinates[0])||(t=this.selectedFeature.geometry.coordinates[0].map(function(e){return{lng:e[0],lat:e[1]}})):"LineString"===this.selectedFeature.geometry.type&&(t=this.selectedFeature.geometry.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})),a={type:null!=(o=this.selectedFeature)&&null!=(o=o.geometry)?o.type:void 0,name:null!=(o=this.selectedFeature)&&null!=(o=o.properties)?o.name:void 0,coordinates:t},o=new CUI.Button({icon:"fa-search",onClick:(l=this,function(){var e,e,t,o,n,r,o,o,o,t=null!=(o=l.selectedFeature)?o.geometry:void 0;if(null!=t){switch(n=null,r=null,t.type){case"Point":r=t.coordinates[0],n=t.coordinates[1];break;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":e=turf.center(l.selectedFeature),e=e.geometry.coordinates,r=e[0],n=e[1];break;default:return void console.log("Unsupported geometry type for reverse geocoding:",t.type)}return o=ez5.session.getConfigDatabaseLanguages().map(function(e){return e.split("-")[0]}).join(","),o=new CUI.XHR({url:"https://nominatim.openstreetmap.org/reverse?format=json&lat="+n+"&lon="+r+"&accept-language="+o}),o=o.start(),o.done(function(e){var t,t;if(e.name)return t=null!=(t=i.getFieldsByName("name"))?t[0]:void 0,t.setValue(e.name),a.name=e.name,s(),l.__checkDetailStatus()})}})}),r=this,s=function(){var e,t;return null==(e=r.selectedFeature).properties&&(e.properties={}),r.selectedFeature.properties.name=a.name,"Point"===a.type?t=[a.coordinates[0].lng,a.coordinates[0].lat]:"Polygon"===a.type?(t=a.coordinates.map(function(e){return[e.lng,e.lat]}),t=[t]):"LineString"===a.type&&(t=a.coordinates.map(function(e){return[e.lng,e.lat]})),r.selectedFeature.geometry.coordinates=t},i=new CUI.Form({data:a,fields:[{type:CUI.Output,name:"type",form:{label:"Type"}},{type:CUI.Input,name:"name",form:{label:"Display Name"},controlElement:o},{type:CUI.DataTable,name:"coordinates",rowMove:!0,form:{label:"Coordinates"},fields:[{name:"lng",form:{label:"Longitude"},type:CUI.NumberInput,json_number:!0,decimalpoint:ez5.session.frontend_locale.numbers.decimal,separator:ez5.session.frontend_locale.numbers.grouping},{name:"lat",form:{label:"Latitude"},type:CUI.NumberInput,json_number:!0,decimalpoint:ez5.session.frontend_locale.numbers.decimal,separator:ez5.session.frontend_locale.numbers.grouping}]}],onDataChanged:(n=this,function(){return s(),n.__checkDetailStatus(),n.__updateFeaturesOnMap()})}),e=i.start()),t=new CUI.SimplePane({class:"cui-pane--window",title:"Detail",content:(_=this,function(){return e}),footer_right:(u=this,function(){var e;if(u.selectedFeature)return u.__detail_save_btn=new CUI.Button({text:"Save",disabled:!0,ui:"map_editor.feature_form.button.save",primary:!0,onClick:function(){return s(),u.__renderFeaturesList(),u.__updateFeaturesOnMap(),u.__selected_feature_saved_data=CUI.util.copyObjectV2(u.selectedFeature,!0),u.__checkDetailStatus()}}),e=new CUI.Button({text:"Cancel",ui:"map_editor.feature_form.button.cancel",onClick:function(){return Object.assign(u.selectedFeature,u.__selected_feature_saved_data),u.__selected_feature_saved_data=CUI.util.copyObjectV2(u.selectedFeature,!0),u.__checkDetailStatus(),u.__renderFeaturesList(),u.__updateFeaturesOnMap()}}),[e,u.__detail_save_btn]})}),this.__tmpl.map.feature_form.append(t))},s.prototype.__checkDetailStatus=function(){if(this.selectedFeature)return CUI.util.isEqual(this.__selected_feature_saved_data,this.selectedFeature)?this.__detail_save_btn.disable():this.__detail_save_btn.enable()},s.prototype.__renderFeaturesList=function(e){var t,o,n,r,a,i,s,o,o,r,l,u,_,c,p,d,h,f,m,g;if(null==e&&(e=null),!this.basic_mode){for(this.featuresList.empty(),this.featuresTree=new CUI.ListViewTree({cols:["maximize"],no_hierarchy:!0,focusable:!1,maximize_horizontal:!0,maximize_vertical:!1,rowMove:!1,selectableRows:!0,onSelect:(p=this,function(e,t){return p.selectedFeature=t.node._feature,CUI.util.isEmpty(p.__drawMode)&&p.__map.fitData(p.selectedFeature,100,!0,-1),p.__renderFeatureDetail()}),onDeselect:(c=this,function(){return console.log("Deselect")})}),l=null,u=this.__features,a=0,s=u.length;a<s;a++)n=u[a],r=this.__getFeatureType(n),i=r&&this.__isFeatureTypeAllowed(r),_=null,i||(_=r?(t="full"===this.allowed_feature_types?"all types":CUI.util.isArray(this.allowed_feature_types)?this.allowed_feature_types.join(", "):this.allowed_feature_types,"Feature type '"+r+"' not allowed"):"Unknown or invalid feature type"),this.single_feature&&0<this.__features.indexOf(n)&&(i=!1,_="Only one feature allowed"),r=new GeoJsonFeatureItem({feature:n,is_valid:i,validation_message:_}),this.featuresTree.addNode(r),e&&n===e&&(l=r);o=[],this.__isFeatureTypeAllowed("points")&&o.push({text:"Add Point (Draw In Map)",onClick:(d=this,function(e){return d.__enableDrawMode("point",d.__addButton)})}),this.__isFeatureTypeAllowed("polygons")&&o.push({text:"Add Polygon (Draw In Map)",onClick:(h=this,function(e){return h.__enableDrawMode("polygon",h.__addButton)})}),this.__isFeatureTypeAllowed("lines")&&o.push({text:"Add Line (Draw In Map)",onClick:(f=this,function(e){return f.__enableDrawMode("line",f.__addButton)})}),0<o.length&&(!this.single_feature||0===this.__features.length)&&(this.__addButton=new LocaButton({loca_key:"map.editor.list.edit.button.add",ui:"map-editor.add.button",group:"one",menu:{items:o}})),this.__removeButton=new LocaButton({loca_key:"map.editor.list.button.remove",ui:"map-editor.remove.button",group:"one",onClick:(m=this,function(e){return m.__removeSelectedFeature()})}),o=[],this.__addButton&&o.push(this.__addButton),o.push(this.__removeButton),this.__feature_buttons=new CUI.Buttonbar({buttons:o,size:"big"}),o=new CUI.SimplePane({class:"cui-pane--window",title:"Locations",footer_left:this.__feature_buttons,content:(g=this,function(){return g.featuresTree.render()})}),this.featuresList.append(o),this.featuresTree.root.open(),l&&l.select()}},s.prototype.__getFeaturesFromData=function(){var e;return(null!=(e=this.data)?e.features:void 0)||[]},s.prototype.__getGeoJsonFromFeatures=function(e){return null==e&&(e=this.__features),{type:"FeatureCollection",features:e}},s.prototype.__addFeatureToList=function(e){var e;this.single_feature&&0<this.__features.length&&(this.__features=[],this.basic_mode||this.featuresTree.empty()),this.basic_mode||(e=new GeoJsonFeatureItem({feature:e}),this.featuresTree.addNode(e),e.select())},s.prototype.__onMapReady=function(){var e,t,t,t;if(this.__map.addDataToSource(s.MAP_SOURCE_NAME,this.data),0<this.__features.length)return e=null!=this._initial_zoom?this.__initial_zoom:3,(1<this.__features.length||1===this.__features.length&&(t=(null!=(t=this.__features.features)?t[0]:void 0)||this.__features[0],"Point"!==(null!=(t=t.geometry)?t.type:void 0)))&&(e=16),this.__map.fitData(null,null,!1,e)},s.prototype.__onMapClick=function(e,t){},s.prototype.__removeSelectedFeature=function(){var e;this.selectedFeature&&(e=CUI.util.idxInArray(this.selectedFeature,this.__features,function(e,t){return e===t}),-1!==e)&&(this.__features.splice(e,1),this.__map.addDataToSource(s.MAP_SOURCE_NAME,{type:"FeatureCollection",features:this.__features}),this.__renderFeaturesList())},s.prototype.__enableDrawMode=function(e,t){var o,o;if(null!=(o=this.__activeToolBtn)&&o.deactivate(),CUI.util.isEmpty(this.__drawMode)||(o=this.__drawMode,this.__disableDrawMode(this.__drawMode),o!==e))switch(this.__drawMode=e,this.__activeToolBtn=t,this.__activeToolBtn.activate(),e){case"point":this.__enableDrawPointMode();break;case"polygon":this.__enableDrawPolygonMode();break;case"line":this.__enableDrawLineMode();break;case"geocoder":this.__enableGeocoderMode();break;default:throw new Error("Invalid draw mode: "+e)}},s.prototype.__disableDrawMode=function(e){switch(e){case"point":this.__disableDrawPointMode();break;case"polygon":this.__disableDrawPolygonMode();break;case"line":this.__disableDrawLineMode();break;case"geocoder":this.__disableGeocoderMode();break;default:throw new Error("Invalid draw mode: "+e)}this.__drawMode=null},s.prototype.__enableDrawPointMode=function(){var e,o;console.log("Enable draw point mode"),this.__showMapContextButtonBar("Click on the map to add a point",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawPointToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"Point"}),this.__drawInteraction.on("drawend",(o=this,function(e){var t,t,e,e=e.feature,t=new ol.format.GeoJSON,t=t.writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"});return o.single_feature&&(o.__features=[]),o.__features.push(t),o.__updateFeaturesOnMap(),o.__renderFeaturesList(t)})),this.__map.__map.addInteraction(this.__drawInteraction)},s.prototype.__disableDrawPointMode=function(){console.log("Disable draw point mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__enableDrawPolygonMode=function(){var e,o,t;console.log("Enable draw polygon mode"),this.__showMapContextButtonBar("Click on the map to add points for the area. Press Enter to finish - Use shift for free draw.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawPolygonToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"Polygon"}),this.__drawInteraction.on("drawend",(o=this,function(e){var t,t,e,e=e.feature,t=new ol.format.GeoJSON,t=t.writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"});return o.single_feature&&(o.__features=[]),o.__features.push(t),o.__updateFeaturesOnMap(),o.__renderFeaturesList(t),o.__drawInteraction&&(o.__map.__map.removeInteraction(o.__drawInteraction),o.__drawInteraction=null),window.removeEventListener("keyup",o.__drawKeyUpHandler),o.__drawKeyUpHandler=null,o.__enableSingleFeatureModify(e)})),this.__map.__map.addInteraction(this.__drawInteraction),this.__drawKeyUpHandler=(t=this,function(e){if("Enter"===e.key&&null!=t.__drawInteraction&&"polygon"===t.__drawMode)return t.__drawInteraction.finishDrawing()}),window.addEventListener("keyup",this.__drawKeyUpHandler)},s.prototype.__disableDrawPolygonMode=function(){console.log("Disable draw polygon mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),window.removeEventListener("keyup",this.__drawKeyUpHandler),this.__drawKeyUpHandler=null,this.__disableSingleFeatureModify(),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__enableSingleFeatureModify=function(t){var e,o,n;console.log("Enable single-feature modify mode"),this.__hideMapContextButtonBar(),this.__showMapContextButtonBar("Drag the vertices to modify the area. Press Enter to finish.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(o=this,function(){return o.__drawPolygonToolboxTool.run()})})),e=new ol.Collection([t]),this.__modifyInteraction=new ol.interaction.Modify({features:e}),this.__modifyInteraction.on("modifyend",(n=this,function(e){var e,e,e,e=e.features.getArray();if(0<e.length)return e=new ol.format.GeoJSON,e=e.writeFeatureObject(t,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"}),n.__features[n.__features.length-1].geometry=e.geometry,n.__updateFeaturesOnMap()})),this.__map.__map.addInteraction(this.__modifyInteraction)},s.prototype.__disableSingleFeatureModify=function(){console.log("Disable single-feature modify mode"),this.__hideMapContextButtonBar(),this.__modifyInteraction&&(this.__map.__map.removeInteraction(this.__modifyInteraction),this.__modifyInteraction=null)},s.prototype.__enableDrawLineMode=function(){var e,o,t;console.log("Enable draw line mode"),this.__showMapContextButtonBar("Click on the map to add points for the line. Press Enter to finish.",new CUI.Button({icon:"fa-check",text:"Done",size:"mini",onClick:(e=this,function(){return e.__drawLineToolboxTool.run()})})),this.__drawInteraction=new ol.interaction.Draw({source:this.__map.getSource(s.MAP_EDITOR_SOURCE_NAME),type:"LineString"}),this.__drawInteraction.on("drawend",(o=this,function(e){var t,t,t,t,e,e=e.feature,t=e.getGeometry(),t=t.getCoordinates();if(!(t.length<2))return t=new ol.format.GeoJSON,t=t.writeFeatureObject(e,{featureProjection:"EPSG:3857",dataProjection:"EPSG:4326"}),o.single_feature&&(o.__features=[]),o.__features.push(t),o.__updateFeaturesOnMap(),o.__renderFeaturesList(t);o.__map.getSource(s.MAP_EDITOR_SOURCE_NAME).removeFeature(e),console.log("Line must have at least 2 points")})),this.__map.__map.addInteraction(this.__drawInteraction),this.__drawKeyUpHandler=(t=this,function(e){if("Enter"===e.key&&null!=t.__drawInteraction&&"line"===t.__drawMode)return t.__drawInteraction.finishDrawing()}),window.addEventListener("keyup",this.__drawKeyUpHandler)},s.prototype.__disableDrawLineMode=function(){console.log("Disable draw line mode"),this.__hideMapContextButtonBar(),this.__drawInteraction&&(this.__map.__map.removeInteraction(this.__drawInteraction),this.__drawInteraction=null),window.removeEventListener("keyup",this.__drawKeyUpHandler),this.__drawKeyUpHandler=null,this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures([]))},s.prototype.__drawLineOnClick=function(e){var t,e,o,n,r,a,i,e=this.__map.getMapCoordsFromEvent(e);if(this.__lineDrawn){for(this.__lineCoords.push([e.lng,e.lat]),a=GeoJsonColumn.createLineFeature(this.__lineCoords),2<this.__lineCoords.length&&this.__features.pop(),this.__features.push(a),this.__updateFeaturesOnMap(),this.__renderFeaturesList(a),r=[],i=this.__lineCoords,o=0,n=i.length;o<n;o++)t=i[o],r.push(GeoJsonColumn.createPointFeature(t[0],t[1]));r.push(GeoJsonColumn.createLineFeature(this.__lineCoords)),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,this.__getGeoJsonFromFeatures(r))}else this.__lineDrawn=!0,this.__lineCoords=[],this.__lineCoords.push([e.lng,e.lat])},s.prototype.__enableGeocoderMode=function(){var n,e,t,o,r,a;return o=this,n=function(){t.destroy(),e.destroy()},e=new MapSearchSelector({data:this.data,name:"map_search_selector",placeholder:"Search to add a location",onFeatureSelected:(r=this,function(e){var t,o;r.__map.fitData(e),r.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[e]}),o=new CUI.Button({text:"Confirm",icon:"fa-check",size:"mini",onClick:function(){return r.__confirmGeocoderFeature(e)}}),t=new CUI.Button({text:"Cancel",icon:"fa-times",size:"mini",onClick:function(){return r.__cancelGeocoderFeature()}}),r.__showMapContextButtonBar("Add this location?",[o,t]),n()})}),t=new CUI.Modal({onShow:function(){return e.focus()},pane:{padded:!0,header_left:new CUI.Label({text:"Add a location"}),content:[e.start()],footer_right:[{text:CUI.Button.defaults.confirm_cancel,onClick:(a=this,function(){return a.__disableGeocoderMode(),n()})}]}}),t.show()},s.prototype.__disableGeocoderMode=function(){},s.prototype.__confirmGeocoderFeature=function(e){console.log("Feature confirmed:",e),this.__geoCoderToolboxTool.run(),this.single_feature&&(this.__features=[]),this.__features.push(e),this.__updateFeaturesOnMap(),this.__renderFeaturesList(e),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[]}),this.__hideMapContextButtonBar(),this.__disableGeocoderMode()},s.prototype.__cancelGeocoderFeature=function(){console.log("Feature addition canceled"),this.__geocoderToolboxTool.run(),this.__map.addDataToSource(s.MAP_EDITOR_SOURCE_NAME,{type:"FeatureCollection",features:[]}),this.__hideMapContextButtonBar(),this.__disableGeocoderMode()},s.prototype.__updateFeaturesOnMap=function(){this.__map.addDataToSource(s.MAP_SOURCE_NAME,{type:"FeatureCollection",features:this.__features})},s})(CUI.Element),GeoJsonDetailMap,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonDetailMap=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.getButtonLocaKey=function(){return"map.detail.plugin.button"},t.prototype.prefName=function(){return"detail_sidebar_show_map"},t.prototype.isAvailable=function(){var o,e,e,e,e,e,t;return!(null==(e=this._detailSidebar)||null==(e=e.object)||!e.getGeoStandard())||(e=null!=(e=this._detailSidebar)&&null!=(e=e.object)?e.mask:void 0,!!e&&(o=!1,e.invokeOnFields("detail",!0,(t=this,function(e,t){if(e instanceof GeoJsonColumn)return o=!0}),this._detailSidebar.object.data[e.table.name()]),o))},t.getConfig=function(){return ez5.session.getBaseConfig("plugin","geo-json")},t.prototype.isDisabled=function(){var o,e,e,e,e,e,e=this._detailSidebar.object,e=e.getGeoStandard(),t;return!!CUI.util.isEmpty(e)&&(e=null!=(e=this._detailSidebar)&&null!=(e=e.object)?e.mask:void 0,!e||(o=!1,e.invokeOnFields("detail",!0,(t=this,function(e,t){if(e instanceof GeoJsonColumn&&e.isVisible("detail")&&!CUI.util.isEmpty(null!=t?t[e.name()]:void 0))return o=!0}),this._detailSidebar.object.data[e.table.name()]),!o))},t.prototype.renderObject=function(){return t.__super__.renderObject.call(this)},t.prototype.showDetail=function(){return t.__super__.showDetail.call(this),this.__map&&this.resetMap(),this.__buildMap(),t.__super__.showDetail.call(this)},t.prototype.__buildMap=function(e,t){var o,n,r,a;return null==t&&(t=null),o={clickable:!1,cluster:!1,onClick:(r=this,function(e,t){return r.__onMapClick(e,t)}),onReady:(n=this,function(){n.__onMapReady()}),drawFeatures:["LineString","Polygon","MultiPolygon"]},GeoJsonMap.load(o).done((a=this,function(e){return a.__map=e,a._detailSidebar.mainPane.replace(a.__map,"top"),CUI.scheduleCallback({ms:1,call:function(){return"function"==typeof t?t():void 0}})}))},t.prototype.resetMap=function(){var e;null!=(e=this.__map)&&e.destroy(),delete this.__map,delete this.__isMapReady,CUI.Events.ignore({instance:this})},t.prototype.destroy=function(){return this.resetMap(),t.__super__.destroy.call(this)},t.prototype.__onMapReady=function(){var e,t,e,e,e,e;return this.__map.resize(!0),e=this._detailSidebar.object,e=this.__collectGeoData(e),e=GeoJsonMap.flattenArrayOfFeatures(e),this.__renderAssets(e),this.__renderPoints(e),this.__map.addDataToSource(MapEditor.MAP_SOURCE_NAME,e),t=this.__getInitialZoom(),(1<e.features.length||1===e.features.length&&(e=e.features[0],"Point"!==(null!=(e=e.geometry)?e.type:void 0)))&&(t=16),this.__map.fitData(null,null,!1,t)},t.prototype.__onMapClick=function(e,t){},t.prototype.__collectGeoData=function(e){for(var t,o,n,r,u,a,i,s,l,_,c,o,p,d,h,f,m,g,y,C,o,b,b,a=[],n=e.getAssetsForBrowser("detail"),p=0,m=n.length,v;p<m;p++)t=n[p],!this.__isAssetEnabledByCustomSetting(t)||CUI.util.isEmpty(t.value.versions)||(o=null!=(o=t.value.technical_metadata)?o.gps_location:void 0,o&&o.latitude&&o.longitude&&t.value.versions.small&&0<t.value.versions.small.width&&0<t.value.versions.small.height&&(o={type:"Feature",geometry:{type:"Point",coordinates:[o.longitude,o.latitude]},properties:{asset:t}},this.__addFieldInfoToFeature(o,t.getField(),"asset"),a.push(o)));for(c=[],u=[],e.mask.invokeOnFields("detail",!0,(v=this,function(e,t){var o,n,r,a,i,s,l;if(t&&e instanceof GeoJsonColumn){if(CUI.util.isArray(t)){for(s=[],n=0,a=t.length;n<a;n++)o=t[n],CUI.util.isEmpty(o)?s.push(void 0):s.push(c.push({field:e,data:o[e.name()]||[]}));return s}return c.push({field:e,data:(null!=t?t[e.name()]:void 0)||[]})}if(e instanceof CustomDataType&&"function"==typeof e.supportsGeoStandard&&e.supportsGeoStandard()){if(CUI.util.isArray(t)){for(l=[],r=0,i=t.length;r<i;r++)o=t[r],CUI.util.isEmpty(o)?l.push(void 0):l.push(u.push({field:e,data:o[e.name()]||[]}));return l}return u.push({field:e,data:(null!=t?t[e.name()]:void 0)||[]})}}),e.data[e.mask.table.name()]),d=0,g=c.length;d<g;d++)_=c[d],CUI.util.isEmpty(_.data)||(i=_.data,this.__addFieldInfoToGeoData(i,_.field,"geo_field"),a.push(i));for(h=0,y=u.length;h<y;h++)if(r=u[h],!CUI.util.isEmpty(null!=(b=r.data)&&null!=(b=b._standard)?b.geo:void 0))if(s=r.data._standard.geo,CUI.util.isArray(s)){for(f=0,C=s.length;f<C;f++)l=s[f],this.__addFieldInfoToGeoData(l,r.field,"custom_geo_field");a=a.concat(s)}else this.__addFieldInfoToGeoData(s,r.field,"custom_geo_field"),a.push(s);return a},t.prototype.getMarkerIcon=function(){var e,e,e,e,e,e,e=this._detailSidebar.object.objecttype(),e=null!=(e=ez5.schema.CURRENT._table_by_name[e]._objecttype.objecttype)&&null!=(e=e.custom_data)&&null!=(e=e.webfrontend)&&null!=(e=e.geo_json)?e.marker_icon:void 0;return e||"fa-map-marker"},t.prototype.getMarkerColor=function(){var e,e,e,e,e,e,e=this._detailSidebar.object.objecttype(),e=null!=(e=ez5.schema.CURRENT._table_by_name[e]._objecttype.objecttype)&&null!=(e=e.custom_data)&&null!=(e=e.webfrontend)&&null!=(e=e.geo_json)?e.marker_color:void 0;return e||null},t.prototype.__renderPoints=function(e){var a;turf.featureEach(e,(a=this,function(e){var t,o,t,n,r,o,o,t=e.geometry;if("Point"===(null!=t?t.type:void 0)&&(t=t.coordinates,CUI.util.isArray(t))&&2<=t.length)return r=CUI.dom.div("map-marker-pin size-mini"),o='<svg viewBox="0 0 16.32177 20.187037"><path fill="#000000" d="m 8.1359244,0.1192069 c -4.41828,0 -8,4.00258 -8,8.5 0,4.4622001 2.55332,9.3124001 6.5371,11.1744001 0.9286,0.4341 1.9972,0.4341 2.9258,0 3.9837996,-1.862 6.5370996,-6.7122 6.5370996,-11.1744001 0,-4.49742 -3.5817,-8.5 -7.9999996,-8.5 z"/></svg>',n=new CUI.Icon({class:"custom-icon",icon:a.getMarkerIcon()}),r.insertAdjacentHTML("afterbegin",o),o=a.getMarkerColor(),o&&CUI.dom.setStyle(r,{"--map-pin-background":o}),r.appendChild(n.DOM),a.__addTooltipToMarker(r,e),o={feature:e,coordinates:t,html:r,anchor:"bottom-center"},a.__map.addMarker(o)}))},t.prototype.__renderAssets=function(e){var n;turf.featureEach(e,(n=this,function(e){var t,o,t,t,o,t,t=e.properties;if(null!=t&&t.asset)return t=t.asset,t=t.getImgElement(null,"small"),o=CUI.dom.div("map-marker-image"),o=CUI.dom.append(o,t),n.__addTooltipToMarker(o,e),t={feature:e,coordinates:e.geometry.coordinates,html:o},n.__map.addMarker(t)}))},t.prototype.__addFieldInfoToFeature=function(e,t,o){e.properties||(e.properties={}),t.fullNameLocalized?e.properties.field_name=t.fullNameLocalized():t instanceof EASField&&null!=t._orginField&&(e.properties.field_name=t._originField.fullNameLocalized()),e.properties.field_type=o},t.prototype.__addFieldInfoToGeoData=function(e,t,o){var n,r,a,i;if("FeatureCollection"===e.type)for(i=e.features,r=0,a=i.length;r<a;r++)n=i[r],this.__addFieldInfoToFeature(n,t,o);else"Feature"===e.type&&this.__addFieldInfoToFeature(e,t,o)},t.prototype.__addTooltipToMarker=function(e,t){var t,t=t.properties;null!=t&&t.field_name&&new CUI.Tooltip({element:e,text:t.field_name,show_ms:20,on_hover:!0,placement:"n"})},t.prototype.__isAssetEnabledByCustomSetting=function(e){var e,e,e,e=null!=(e=e.getField().FieldSchema)&&null!=(e=e.custom_settings)?e.show_in_map:void 0;return CUI.util.isNull(e)||e},t.prototype.__getInitialZoom=function(){var e,e,e,e,e,e,e=this._detailSidebar.object.objecttype(),e=null!=(e=ez5.schema.CURRENT._table_by_name[e]._objecttype.objecttype)&&null!=(e=e.custom_data)&&null!=(e=e.webfrontend)&&null!=(e=e.geo_json)?e.zoom:void 0;return null==e?3:e},t})(DetailSidebarPlugin);ez5.session_ready(function(){if(GeoJsonMap.getMapClass().canLoad())return DetailSidebar.plugins.registerPlugin(GeoJsonDetailMap)});var MapFormPopover,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapFormPopover=(e=>{function t(e){e.fields=this._getFields(),t.__super__.constructor.call(this,e)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this)},t.prototype._getFields=function(){var e,b,e={type:CUI.DataFieldProxy,call_others:!1,name:"search_map",element:(b=this,function(e){var i,s,t,o,n,r,a,l,u,_,c,c,p,d,h,f,m,g,y,C,g=function(){return CUI.Events.trigger({node:e,type:"data-changed"})},i=e.getData()||{};return CUI.util.isEmpty(i.feature)&&(i.feature={type:"FeatureCollection",features:[]},i.type="polygon_search"),s=null,_=null,l=null,p=null,f=null,m=null,y=function(){for(var e,t,o,t,n,r,a,t=new ol.format.GeoJSON,o=s.getSource().getFeatures(),t=t.writeFeaturesObject(o,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"}),a=t.features,n=0,r=a.length;n<r;n++)e=a[n],e.properties={bbox:turf.bbox(e)};return Object.assign(i.feature,t),g()},o=function(){return a.setActive(!0),u.setActive(!1),f.getFeatures().clear(),m.hide(),s.__map.removeInteraction(p),s.__map.removeInteraction(f),s.__map.removeInteraction(l),s.__map.addInteraction(_)},r=function(){return a.setActive(!1),s.__map.removeInteraction(_),s.__map.addInteraction(p),setTimeout(function(){return s.__map.addInteraction(f),f.getFeatures().clear(),m.hide()},500)},t=function(){return u.setActive(!0),a.setActive(!1),f.getFeatures().clear(),m.hide(),s.__map.removeInteraction(p),s.__map.removeInteraction(f),s.__map.removeInteraction(_),s.__map.addInteraction(l)},n=function(){return u.setActive(!1),s.__map.removeInteraction(l),s.__map.addInteraction(p),setTimeout(function(){return s.__map.addInteraction(f),f.getFeatures().clear(),m.hide()},500)},a=new CUI.Button({text:"Draw Area",icon:"fa-pencil-square-o",onClick:function(){return(a.isActive()?r:o)()}}),u=new CUI.Button({text:"Draw Circle",icon:"fa-circle-o",onClick:function(){return(u.isActive()?n:t)()}}),c=new CUI.Button({text:"Geocoder",icon:"fa-search",onClick:function(){return b.showGeocoderPopover(s,function(e){return s.addDataToSource("fylr-default",e),y()})}}),h={},d=new CUI.Button({text:"Point & Radius",icon:"fa-dot-circle-o",onClick:function(){var e,t,n,t=new CUI.Form({data:h,fields:[{type:CUI.Input,name:"long_lat",placeholder:"e.g. -73.935242, 40.730610",form:{label:"Lon/Lat"}},{type:CUI.NumberInput,name:"radius",placeholder:"e.g. 1000",form:{label:"Radius"}},{type:CUI.Select,name:"unit",form:{label:"Unit"},options:[{value:"meters",text:"Meters"},{value:"kilometers",text:"Kilometers"},{value:"miles",text:"Miles"},{value:"feet",text:"Feet"},{value:"nauticalmiles",text:"Nautical Miles"}]}]}),e=new CUI.Button({text:"Apply",icon:"fa-check",onClick:function(){var e,e,t,o;return null!=h.long_lat&&null!=h.radius&&(e=GeoJsonColumn.extractCoordinates(h.long_lat),t=parseFloat(h.radius),o=h.unit,e)&&(e=turf.circle([e.geometry.coordinates[0],e.geometry.coordinates[1]],t,{steps:64,units:h.unit||"kilometers"}),s.addDataToSource("fylr-default",e,!0),h={},y()),n.hide()}}),n=new CUI.Popover({element:d,pane:{content:[t.start(),e]}});return n.show()}}),C=new CUI.VerticalLayout({maximize_horizontal:!0,class:"map-form-popover-vl",top:{content:[a,u,c,d]},bottom:{content:[new CUI.Label({text:"Draw a rectangle or circle in the map to search for items in that area."})]}}),c={clickable:!1,zoomToFitAllMarkersOnInit:!0,cluster:!1,searchInput:!1},GeoJsonMap.load(c).done(function(e){var e,t;s=e,_=new ol.interaction.Draw({source:s.getSource(),type:"Circle",geometryFunction:ol.interaction.Draw.createBox()}),_.on("drawend",function(){return r()}),l=new ol.interaction.Draw({source:s.getSource(),type:"Circle"}),l.on("drawend",function(e){var t,e,t,e=e.feature,t=e.getGeometry(),t=ol.geom.Polygon.fromCircle(t,16);return e.setGeometry(t),n()}),p=new ol.interaction.Modify({source:s.getSource()}),f=new ol.interaction.Select,s.__map.addInteraction(f),f.on("select",function(e){return 0<e.selected.length?m.show():m.hide()}),s.getSource().on("addfeature",function(){return y()}),s.getSource().on("removefeature",function(){return y()}),e=[],t=new CUI.Label({text:"Selected Area"}),e.push(t),e.push(new CUI.Button({icon:"trash",size:"mini",onClick:function(){var e,t,t=f.getFeatures();if(0<t.getLength())return e=t.item(0),s.getSource().removeFeature(e),t.clear(),m.hide(),g()}})),m=new CUI.Buttonbar({class:"ez5-selected-objects-badge",buttons:e}),s.resize(),CUI.dom.append(s.__mapTemplate.get("buttons-bottom-center"),m),m.hide(),C.replace(s,"center"),s.addDataToSource("fylr-default",i.feature,!0)}),C})};return[e]},t.prototype.showGeocoderPopover=function(t,o){var n,e,r,a,i,s;return a=this,n=function(){r.destroy(),e.destroy()},e=new MapSearchSelector({data:{},name:"map_search_selector",placeholder:"Search to add a location",onFeatureSelected:(i=this,function(e){t.fitData(e),o(e),n()})}),r=new CUI.Modal({onShow:function(){return e.focus()},pane:{padded:!0,header_left:new CUI.Label({text:"Add a location"}),content:[e.start()],footer_right:[{text:CUI.Button.defaults.confirm_cancel,onClick:(s=this,function(){return n()})}]}}),r.show()},t})(CUI.FormPopover),SimpleMapEditor,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,SimpleMapEditor=(e=>{function o(){return o.__super__.constructor.apply(this,arguments)}return extend(o,e),o.MAP_SOURCE_NAME="fylr-default",o.prototype.initOpts=function(){return o.__super__.initOpts.call(this),this.addOpts({field:{mandatory:!0,check:Field},data:{check:"PlainObject"},done:{default:function(){},check:Function}})},o.prototype.readOpts=function(){return o.__super__.readOpts.call(this),CUI.util.isEmpty(this._data)&&(this._data=GeoJsonColumn.emptyFeatureCollection()),this.data=this._data||GeoJsonColumn.emptyFeatureCollection(),this.field=this._field,this.__done=this._done},o.prototype._getFields=function(){var e,u,e={type:CUI.DataFieldProxy,call_others:!1,name:"search_map",element:(u=this,function(e){var o,n,t,r,a,r,i,s,l,i=function(){return CUI.Events.trigger({node:e,type:"data-changed"})},o=e.getData()||{};return CUI.util.isEmpty(o)&&(o={type:"FeatureCollection",features:[]}),n=null,s=function(){var e,e,t,e,e=new ol.format.GeoJSON,t=n.getSource().getFeatures(),e=e.writeFeaturesObject(t,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"});return Object.assign(o,e),0<t.length&&"Point"===t[0].getGeometry().getType()&&(e=ol.proj.toLonLat(t[0].getGeometry().getCoordinates()),u.latInput.setValue(e[1]),u.lngInput.setValue(e[0])),i()},u.__coordData={lat:0,lng:0},u.latInput=new CUI.NumberInput({name:"lat",data:u.__coordData,placeholder:"Latitude",decimals:15,onDataChanged:function(){return t()}}),u.lngInput=new CUI.NumberInput({name:"lng",data:u.__coordData,placeholder:"Longitude",decimals:15,onDataChanged:function(){return t()}}),t=function(){var e,t,t;if(n&&(e=parseFloat(u.__coordData.lat),t=parseFloat(u.__coordData.lng),!(isNaN(e)||isNaN(t)||e<-90||90<e||t<-180||180<t)))return n.getSource().clear(),t=GeoJsonColumn.createPointFeature(t,e),n.addDataToSource("fylr-default",t),s()},r=new CUI.HorizontalLayout({left:{content:new CUI.Label({text:"Lat:"}),class:"coord-input-label"},center:{content:u.latInput.start()}}),a=new CUI.HorizontalLayout({left:{content:new CUI.Label({text:"Lng:"}),class:"coord-input-label"},center:{content:u.lngInput.start()}}),l=new CUI.VerticalLayout({maximize_horizontal:!0,class:"map-form-popover-vl",top:{content:[]},center:{content:n},bottom:{content:[r,a]}}),r={clickable:!1,cluster:!1,zoomToFitAllMarkersOnInit:!0,onClick:function(e,t,o,n){var n;return t.getSource().clear(),n=GeoJsonColumn.createPointFeature(n.lng,n.lat),t.addDataToSource("fylr-default",n),s()},onReady:function(){if(!CUI.util.isEmpty(o))return n.addDataToSource("fylr-default",o)}},GeoJsonMap.load(r).done(function(e){n=e,n.resize(),l.replace(n,"center"),CUI.util.isEmpty(u.data)||n.addDataToSource("fylr-default",u.data)}),l})};return[e]},o.prototype.getPopoverOpts=function(){var e,t,e=o.__super__.getPopoverOpts.call(this);return e.title=$$("geoJsonColumn.simple-map-editor.title"),e.pane.class="ez5-simple-map-editor",e.pane.footer_right=new CUI.Button({text:$$("base.done"),primary:!0,onClick:(t=this,function(){var e,e=t._data;return t.__done(e),t.__closePopover()})}),e},o})(MapFormPopover),MapSearchSelector,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapSearchSelector=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.initOpts=function(){return t.__super__.initOpts.call(this),this.addOpts({onFeatureSelected:{check:Function},placeholder:{check:String}})},t.prototype.__getDisplayText=function(){return this.__getInputPlaceholder()},t.prototype.__search=function(){var e,e,e,t,e=this.__input.value,e=new CUI.XHR({url:"https://nominatim.openstreetmap.org/search?format=geojson&polygon_geojson=1&limit=5&q="+e}),e=e.start();return e.done((t=this,function(e){return t.__show(e)})),e},t.prototype.render=function(){var e;if(!this.__isRendered)return t.__super__.render.call(this),this.__autocompletion.addContainer("all"),this.__searchButton=new CUI.Button({appearance:"normal",icon:"fa-search",onClick:(e=this,function(){e.__search()})}),CUI.dom.replace(this.__button,this.__searchButton)},t.prototype.__getInputPlaceholder=function(){return this._placeholder},t.prototype.__getButtonLocaKey=function(){return"pool.field.input.search.button.open_search"},t.prototype.__show=function(e){var t,o,n,r,a;if(this.__autocompletion.emptyContainer(),"FeatureCollection"===e.type){var i,a=e.features;for(i=this,o=function(e){var t,t=i.__autocompletion.appendItem("all",new CUI.VerticalList({content:[e.properties.display_name]}));return CUI.Events.listen({type:"click",node:t,call:function(){"function"==typeof i._onFeatureSelected&&i._onFeatureSelected(e),i.__autocompletion.hide()}})},n=0,r=a.length;n<r;n++)t=a[n],o(t);this.__autocompletion.show()}},t})(SearchSelector),GeoJsonSchemaPlugin,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonSchemaPlugin=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.getCustomSettings=function(e){var e,t,t;return"geo_json"===(null!=e&&null!=(t=e.column)?t.type:void 0)&&ez5.session.getCapability("geo_support")?(e.custom_settings["geo-json"]||(e.custom_settings["geo-json"]={}),t=e.custom_settings["geo-json"],null==t.allow_points_feature&&(t.allow_points_feature=!0),null==t.allow_lines_feature&&(t.allow_lines_feature=!0),null==t.allow_polygons_feature&&(t.allow_polygons_feature=!0),null==t.allow_geocoder&&(t.allow_geocoder=!0),null==t.allow_multiple_features&&(t.allow_multiple_features=!0),e=[{type:CUI.Checkbox,name:"allow_multiple_features",data:t,form:{label:"Support Feature Collections"}},{type:CUI.Checkbox,name:"allow_points_feature",data:t,form:{label:"Support Points"}},{type:CUI.Checkbox,name:"allow_lines_feature",data:t,form:{label:"Support Lines"}},{type:CUI.Checkbox,name:"allow_polygons_feature",data:t,form:{label:"Support Polygons"}},{type:CUI.Checkbox,name:"allow_geocoder",data:t,form:{label:"Support Geocoder"}}],e):[]},t.prototype.getCustomSettingsLabel=function(e){var e;if("geo_json"===(null!=e&&null!=(e=e.column)?e.type:void 0)&&ez5.session.getCapability("geo_support"))return"GeoJson Editor Settings"},t.prototype.getCustomSettingsDisplay=function(e){return[]},t.prototype.getName=function(){return"geo-json"},t})(SchemaPlugin);Schema.registerPlugin(new GeoJsonSchemaPlugin);var MapConfigurationEditor,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,MapConfigurationEditor=(e=>{function t(e){t.__super__.constructor.call(this,e),this.__init(),this.__initMap()}return extend(t,e),t.prototype.initOpts=function(){t.__super__.initOpts.call(this),this.addOpts({data:{check:"PlainObject",default:{}},onDataChanged:{check:Function,default:function(){}}})},t.prototype.readOpts=function(){t.__super__.readOpts.call(this),this._data.center||(this._data.center={lat:0,lng:0}),null==this._data.zoom&&(this._data.zoom=2)},t.prototype.__init=function(){return this.__layout=new CUI.VerticalLayout({top:{content:new CUI.Label({text:$$("geo_json.objecttype.map_config.title"),class:"ez5-map-config-title"})},center:{content:this.__createMapContainer()}})},t.prototype.getElement=function(){return this.__layout.DOM},t.prototype.__createMapContainer=function(){return this.__mapContainer=CUI.dom.div("ez5-map-config-container"),CUI.dom.setStyle(this.__mapContainer,{height:"300px",width:"300px"}),this.__mapContainer},t.prototype.__initMap=function(){var e,t,o,n,r;return CUI.util.isArray(this._data.center)&&(this._data.center={lat:this._data.center[0],lng:this._data.center[1]}),this._data.zoom=Math.round(this._data.zoom),e={centerPosition:this._data.center,zoom:this._data.zoom,clickable:!1,tilesSelector:!1,searchInput:!1,onMoveEnd:(o=this,function(){return o.__saveCurrentView()}),onZoomEnd:(t=this,function(){return t.__saveCurrentView()})},GeoJsonMap.load(e).done((r=this,function(e){return r.__map=e,CUI.dom.append(r.__mapContainer,r.__map),r.__map.resize()})).fail((n=this,function(e){return console.error("Failed to load map:",e)}))},t.prototype.__saveCurrentView=function(){if(this.__map)return this._data.center=this.__map.getCenter(),this._data.zoom=Math.round(this.__map.getZoom()),this._onDataChanged()},t.prototype.destroy=function(){var e;return null!=(e=this.__map)&&e.destroy(),t.__super__.destroy.call(this)},t})(CUI.Element),GeoJsonObjecttypePlugin,extend=function(e,t){for(var o in t)hasProp.call(t,o)&&(e[o]=t[o]);function n(){this.constructor=e}return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty,GeoJsonObjecttypePlugin=(e=>{function t(){return t.__super__.constructor.apply(this,arguments)}return extend(t,e),t.prototype.__hasGeoJsonFields=function(){var t,e,o,n,r;return this.otm=new ObjecttypeManager,this.otm.addObjecttypes((o=this,function(e){return e.name()===o._objecttypeListViewItem.objecttype.name()})),e=this.otm.getAllFields(),n=this,t=function(e){return e instanceof GeoJsonColumn||!!(e instanceof CustomDataType&&"function"==typeof e.supportsGeoStandard&&e.supportsGeoStandard())},e.some((r=this,function(e){return t(e)}))},t.prototype.getTab=function(){var e,t,e;if(ez5.session.getCapability("geo_support")&&this.__hasGeoJsonFields())return e={padded:!1,name:"geo_json",text:$$("admin.objecttype.tab.geo_json"),content:(t=this,function(){return t.__renderGeoJsonTab()})},e},t.prototype.onLoad=function(){var e,e=this.__getData();e.objecttype.custom_data.webfrontend||(e.objecttype.custom_data.webfrontend={}),e.objecttype.custom_data.webfrontend.geo_json||(e.objecttype.custom_data.webfrontend.geo_json={})},t.prototype.getSaveData=function(e){var t,t;null==(t=e.objecttype.custom_data).webfrontend&&(t.webfrontend={}),null==(t=e.objecttype.custom_data.webfrontend).geo_json&&(t.geo_json={}),e.objecttype.custom_data.webfrontend.geo_json=CUI.util.copyObjectV2(this.__getData().objecttype.custom_data.webfrontend.geo_json,!0)},t.prototype.__renderGeoJsonTab=function(){var e,e,e=this.__getData().objecttype.custom_data.webfrontend.geo_json,e=new CUI.Form({data:e,fields:this.__getFormFields(e)});return e.start()},t.prototype.__getFormFields=function(e){var t,o,n,r,a,i,t=[{type:CUI.Checkbox,name:"enabled",text:$$("geo_json.objecttype.enabled.text"),form:{label:$$("geo_json.objecttype.enabled.label")},onDataChanged:function(e,t){var o,n,r,a,i,s,l,u,_;if(e.enabled){for(s=["marker_icon","marker_color","default_view.enabled","default_view"],u=[],o=0,a=s.length;o<a;o++)r=s[o],u.push(t.getForm().getFieldsByName(r)[0].enable());return u}for(l=["marker_icon","marker_color","default_view.enabled","default_view"],_=[],n=0,i=l.length;n<i;n++)r=l[n],_.push(t.getForm().getFieldsByName(r)[0].disable());return _}},{type:CUI.IconInput,name:"marker_icon",disabled:(i=this,function(){return!e.enabled}),form:{label:$$("geo_json.objecttype.marker_icon.label"),hint:$$("geo_json.objecttype.marker_icon.hint")}},{type:CUI.ColorInput,name:"marker_color",disabled:(a=this,function(){return!e.enabled}),form:{label:$$("geo_json.objecttype.marker_color.label"),hint:$$("geo_json.objecttype.marker_color.hint")}},{type:CUI.Checkbox,name:"default_view.enabled",disabled:(r=this,function(){return!e.enabled}),form:{label:$$("geo_json.objecttype.default_view.enable")}},{type:CUI.DataFieldProxy,call_others:!1,name:"default_view",disabled:(n=this,function(){return!e.enabled}),element:(o=this,function(e){return o.__createMapConfigurationEditor(e)})}];return t},t.prototype.__createMapConfigurationEditor=function(e){var t,o,o,n,o=e.getData()||{enabled:!1,center:{lat:0,lng:0},zoom:2},t=new CUI.VerticalLayout;return o.enabled&&(o=new MapConfigurationEditor({data:o,onDataChanged:(n=this,function(){return CUI.Events.trigger({type:"data-changed",node:e})})}),t.append(o.getElement(),"center")),t},t})(ez5.ObjecttypePlugin);Objecttype.plugins.registerPlugin(GeoJsonObjecttypePlugin);